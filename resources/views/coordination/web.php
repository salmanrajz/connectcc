
<?php

use App\audio_recording;
use App\choosen_number;
use App\lead_sale;
use App\remark;
use App\verification_form;
use Illuminate\Support\Facades\Route;
use App\Events\MyEvent;
use App\numberdetail;
use App\status_code;
use App\activation_form;
use App\customer_notification;
use App\User;
use Carbon\Carbon;
// MyEvent2
// use app\Events\MyEvent2;
// use app\Notifications\OneWeekAfterNotice;
use Illuminate\Support\Facades\Auth;
use Spatie\MailTemplates\TemplateMailable;
// use Thomasjohnkane\Snooze\Models\ScheduledNotification;
// use Request;
// use Yajra\DataTables\Facades\DataTables;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
// Role::create(['name'=> 'Trainer']);

use  Spatie\Permission\Traits\HasRoles;
// use Task
use App\Notifications\TestCompleted;
// MyEvent$
use App\Events\TaskEvent;
/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/

// Route::get('/test-notification', function () {
//     // return Carbon::now()->subHours(3)->toDateTimeString();
//     $date = new \DateTime();
//     $date->modify('-3 hours');
//     $formatted_date = $date->format('Y-m-d H:i:s');
//     return $dataNum = choosen_number::select("choosen_numbers.number_id", 'choosen_numbers.id')
//         ->Join(
//             'numberdetails',
//             'numberdetails.id',
//             '=',
//             'choosen_numbers.number_id'
//         )
//         // ->where("choosen_numbers.user_id", auth()->user()->id)
//         ->where('choosen_numbers.status', '1')
//         ->where(
//             'choosen_numbers.created_at',
//             '<',
//             $formatted_date
//         )
//         ->get()->count();
// });
// Route::get('/attendance/{id}', function ($id) {
//     // event(new TaskEvent('Hey Whatsup'));
//     return User::find($id)->authentications;
//     // User::find(1)->notify(New TestCompleted);
// });
// Route::get('/view-notification', function () {
//     // event(new TaskEvent('Hey Whatsup'));
//     return view('notify.view-notify');
//     // User::find(1)->notify(New TestCompleted);
// });

// Route::get('users/{id}', function ($id) {
Route::get('VC', 'ImportExcelController@vc')->name('vc');
Route::post('vcupload', 'ImportExcelController@vcupload')->name('vcupload');
// 
Route::prefix('slack')->group(function () {
    Route::post('number-checker', 'SlackController@mynumber')->middleware('guest');
});
// });
Route::get('LoadNumber/{simtype}', 'NumberController@LoadNumber')->name('LoadNumber')->middleware('auth');
Route::get('LoadNumberMWH/{simtype}', 'NumberController@LoadNumberMWH')->name('LoadNumberMWH')->middleware('auth');
Route::post('LoadActiveFormMWH', 'NumberController@LoadActiveFormMWH')->name('LoadActiveFormMWH')->middleware('auth');
Route::post('LoadActiveFormMWH2', 'NumberController@LoadActiveFormMWH2')->name('LoadActiveFormMWH2')->middleware('auth');
Route::post('ActivationFromPartner', 'NumberController@ActivationFromPartner')->name('ActivationFromPartner')->middleware('auth');
Route::get('LoadMyNumber', 'NumberController@LoadMyNumber')->name('LoadMyNumber')->middleware('auth');
Route::get('LoadMWHNumber', 'NumberController@LoadMWHNumber')->name('LoadMWHNumber')->middleware('auth');
Route::get('LoadNumberForm', 'NumberController@LoadNumberForm')->name('LoadNumberForm')->middleware('auth');

Route::post('BookNumLoad', 'NumberController@BookNumLoad')->name('BookNumLoad')->middleware('auth');
Route::post('RevNumNew', 'NumberController@RevNumNew')->name('RevNumNew')->middleware('auth');
// 
Route::get('DailyActivation', 'ReportController@DailyActivation')->name('my.log')->middleware('auth');
Route::get('plan_below_150_get', 'ReportController@plan_below_150_get')->name('plan_below_150_get')->middleware('auth');
Route::get('CallCenterActivation', 'ReportController@CallCenterActivation')->name('call.center.activation')->middleware('auth');
Route::get('MonthlyTarget', 'ReportController@MonthlyTarget')->name('my.target')->middleware('auth');
Route::get('AdsGenerator/{slug}', 'AdsController@AdsGenerator')->name('AdsGenerator');
Route::get('MonthlyAttendance', 'AttendanceController@MonthlyAttendance')->name('monthly.attendance')->middleware('auth');
Route::get('MonthlySalary/{id}', 'SalaryController@MonthlySalary')->name('monthly.salary')->middleware('auth');
Route::get('MonthlySalary-fixed/{id}', 'SalaryController@MonthlySalaryFixed')->name('monthly.salary.fixed')->middleware('auth');
Route::get('agent-salary', 'SalaryController@agent_salary')->name('agent.salary')->middleware('auth');
Route::get('agent-salary-fixed', 'SalaryController@agent_salary_fixed')->name('agent.salary.fixed')->middleware('auth');
Route::post('salary-set', 'SalaryController@salary_set')->name('salary.set')->middleware('auth');
Route::post('salary-variable-final', 'SalaryController@salary_variable_final')->name('salary.variable.final')->middleware('auth');

Route::get('phpversion', function () {
    // phpinfo();
    // $row = 971508206730;
    // return $length = Str::length($row);
    // if($length > )
    //     if (isset($_SERVER["HTTP_CF_CONNECTING_IP"])) {
    //     return $_SERVER['REMOTE_ADDR'] = $_SERVER["HTTP_CF_CONNECTING_IP"];
    // }else{
        
        // return Request::ip();

    // }
    $date = \Carbon\Carbon::today()->subDays(5);
    $data = \App\lead_sale::whereNotIn('status', ['1.02', '1.11', '1.15', '1.04', '1.03', '1.06'])
        ->where(
            'updated_at',
            '<=',
            $date
        )
        ->whereIn('sim_type',['New','MNP'])
        ->get();
    foreach ($data as $dd) {
        foreach (explode(
            ',',
            $dd->selected_number
        ) as $lp) {
            // return $dd->id;
            $k = \App\numberdetail::where('number', $lp)
                ->first();
            if ($k) {
                $dj = \App\numberdetail::findorfail($k->id);
                if ($dj->status != 'Hide' || $dj->status != 'Hidden Return to Etisalat' || $dj->status != 'SILVDEC21F' || $dj->status == 'TTFUPD') {
                    $dj->status = 'Available';
                    $dj->book_type = '0';
                    $dj->save();
                }
            }
            
            
            // return $dj->id;
            // $dek = \App\choosen_number::where('number_id', $dj->id)->first();
            // // return $dek->id;;
            // if ($dek) {
            //     $dej = \App\choosen_number::findorfail($dek->id);
            //     // $dej->status = '1';
            //     $dej->delete();
            //     // $dej->save();
            // }
            //  $dd->id;

            $dk = \App\lead_sale::whereIn('sim_type', ['New', 'MNP'])->where('id',$dd->id)->first();
            $dk->status = '1.15';
            $dk->remarks = 'Lead Reject due to In Activity - S';
            $dk->save();
            $de = \App\verification_form::where('lead_no', $dd->id)->first();
            if ($de) {
                $der = \App\verification_form::findorfail($de->id);
                $der->status = '1.15';
                $der->save();
            }
        }
    }
    return "DONE";
    $number = numberdetail::where('status','Hold')->get();
    foreach($number as $data){

    }
    // if (isset($_SERVER["HTTP_CF_CONNECTING_IP"])) {
    //     return $_SERVER['REMOTE_ADDR'] = $_SERVER["HTTP_CF_CONNECTING_IP"];
    // }
    // return "No";

    // $date = new \DateTime();
    // $date->modify('-3 hours');
    // $formatted_date = $date->format('Y-m-d H:i:s');
    // return $dataNum = choosen_number::select("choosen_numbers.number_id", 'choosen_numbers.id')
    // ->Join(
    //     'numberdetails',
    //     'numberdetails.id',
    //     '=',
    //     'choosen_numbers.number_id'
    // )
    // // ->where("choosen_numbers.user_id", auth()->user()->id)
    // ->where('choosen_numbers.status', '1')
    // ->where('numberdetails.non_c', '!=', 1)
    // ->where('numberdetails.status', 'Reserved')
    // ->where(
    //     'choosen_numbers.created_at',
    //     '<',
    //     $formatted_date
    // )
    // ->get();

//     // event(new MyEvent2('hello world'));
//     return view('dashboard.test');
});
Route::get('/ads/{slug}', 'NumberController@index')
    ->where('slug', '.*');


Route::get('testnumber', function () {

    // $salesData = \App\lead_sale::selectRaw("COUNT(*) as count, lead_sales.saler_id")
    // ->LeftJoin(
    //     'users',
    //     'users.id',
    //     'lead_sales.saler_id'
    // )
    //     // ->whereBetween('created_at', [Carbon::createFromDate($year, $month, 1), Carbon::createFromDate($year, $month, $daysCount)])
    //     ->whereYear('lead_sales.created_at', Carbon::now()->year)
    //     ->whereMonth('lead_sales.created_at', Carbon::now()->month)
    //     ->where('users.agent_code', 'CC8')
    //     ->groupBy('users.id')
    //     ->get()->pluck('saler_id');
    // $a = array();
    // $data =  \App\User::where('role', 'Sale')
    //     ->whereNotIn('id', $salesData)
    //     ->where('users.agent_code','CC8')
    //     ->get();
    // foreach ($data as $k => $v) {
    //     $a[$k]['name'] = $v['name'];
    //     $a[$k]['email'] = $v['email'];
    //     $a[$k]['call_center'] = $v['agent_code'];
    //     $last_sale =     \Carbon\Carbon::parse(\App\Http\Controllers\HomeController::LastSaleCounter($v->id))->diffForHumans();
    //     if ($last_sale == '1 second ago') {
    //         $a[$k]['last_sale'] = 'No Sale Made Yet';
    //     }
    //     else{
    //         $a[$k]['last_sale'] = 'SYSTEM ISSUE CONTACT ADMIN';
    //     }
    // }
    // // return $a;
    // return view('email.FailureReminder', compact('a'));
    // return "A";

    // if (isset($_SERVER["HTTP_CF_CONNECTING_IP"])) {

    //     $region_name = $_SERVER["HTTP_CF_IPCOUNTRY"];
    //     $user_country = $_SERVER["HTTP_CF_IPCOUNTRY"];
    //     $ipaddress = $_SERVER['REMOTE_ADDR'] = $_SERVER["HTTP_CF_CONNECTING_IP"];
    //     // $details = json_decode(file_get_contents("http://ipinfo.io/{$ipaddress}"));
    //     $details = $ipaddress;
    // } else {
    //     $ipaddress =   \Request::ip();
    //     $details = $ipaddress;

    //     // $details = json_decode(file_get_contents("http://ipinfo.io/{$ipaddress}"));
    //     // $user_country =   $details->country;
    //     // $region_name =   $details->region;
    // }
    // return $ipaddress;
    // $data = '0545977707,0547155520,0508380110,0567996886,0568599994,0567877764,0567902333,0568984499,0562044445,0563555589,0564353535,0563888843,0503270220,0502348811,0567185777,0567314777,0567328777,0567340999,0567348777,0567361777,0567622121,0567703388,0501087801,0567060460,0567420999,0567666516,0567792223,0567100303,0567548777,0508797676,0509577979,0544970999,0545050406,0562335544,0562336336,0562336622,0562337788,0562339393,0562343234,0562366668,0565588808,0568444423,0563477707,0543333005,0543888840,0544255553,0503159090,0508855247,0504369009,0547111186,0542022225,0562339993,0508893003,0501109707,0544080401,0544603838,0544626264,0547606009,0543203338,0547888200,0547670011,0545555183,0545555184,0505227711,0505994488,0545555249,0567772265,0566004224,0566006757,0508585466,0502553655,0503505081,0505192030,0562400440,0543250250,0566559558,0562828820,0568811990,0543223232,0543331131,0543343433,0544788884,0544999914,0545077775,0545225552,0545444666,0545556566,0545556656,0548880777,0563337772,0563339555,0564415555,0565557222,0568333318,0569229992,0569388889,0544635555,0547044407,0547488881,0547488882,0548880055,0548880884,0561074444,0562043333,0563045555,0563547777,0565888801,0567053333,0568299990,0568699994,0569031111,0569041111,0569051111,0569081111,0569082222,0569122226,0569644441,0548881887,0548883083,0563773307,0565753535,0509339323,0509409949,0548887818,0548887829';
    // $data = 
    // $data = '0563222276,0563722226,,0563822229,0565722226,0565822223,0568222251,0568622225,0569222236,0569222243,0569222274,0569222275,0542222658,0542222683,0542222748,0563822226,0565822226,0565922227,0562733336,0562733338,0565233338,0565733331,0565733338,0565833331,0567333319,0567333349,0567333354,0567333362,0568333327,0568333375,0568533332,0568633334,0568633337,0568733332,0568733334,0568733335,0569333371,0569333376,0569333382,0569333387,0543333794,0569833335,0562444419';
    // $data = '0567697776,0567550557,0565922259,0562277333,0562022500,0504422750,0545900999,0501266899,0561080300,0561090070,0565633334,0565550100,0565559050,0561706706,0567227646,0562999937,0564663399,0505258505,0562221040,0505862020,0509550089,0502290219,0563550055,0503077004,0505111823,0562666618,0562522022,0566220200,0544084400,0543611117,0562288088,0567074770,0562332900,0543388088,0545870909,0567500909,0544320909,0543250909,0543610909,0566116622,0563222240,0567055553,0562800888,0562040090,0506095111,0545025555,0543334354,0551261316,0565911110,0562030110,0544774466,0566108008,0544474757,0509965969,0561399929,0545365666,0564969696,0542230020,0568799991,0563444001,0565611165,0569596966,0562000127,0569060555,0563323329,0562328222,0508809928,0565590555,0568082088,0566929629,0563093094,0563211131,0509099061,0563350111,0569288988,0565525533,0509119169,0525068691,0502898984,0568782888,0563360111,0544080080,0509775915,0501779791,0502245174,0564793333,0564433772,0561614333,0544774499,0569877774,0547767711,0509500953,0504190595,0563006665,0569100109,0566009909,0567866066,0501555318,0569133330,0565700777,0563449696,0544394949';
    // $data = '0545266662,0545266665,0545322225,0545950055,0545960050,0545965678,0545968020,0547055557,0547132777,0547368855,0506556474,0506601051,0506636806,0507227404,0507230110,0507525220,0547087111,0547398855,0547428008,0547428855,0507306370,0507323020,0507365665,0507580085,0507690220,0507701505,0507709330,0507754664,0507756707,0508154114,0508229297,0508252008,0506502560,0506962882,0507383223,0507422882,0547709404,0543308880,0544300949,0545967891,0564374004,0564406011,0542070207,0544282004,0567979794,0567979888,0569054454,0569068855,0569218855,0569717171,0569737373,0569792222,0569797974,0569797976,0569828282,0569868686,0569883830,0569898982,0569898984,0542220206,0542220209,0543994994,0543997788,0544309009,0568112262,0569262626,0569393936,0569393938,0569464646,0569484848,0542220026,0544225577,0545060070,0549909067,0549909101,0568884373,0569494941,0569494942,0569494947,0569585858,0569626262,0569646464,0561651122,0561792525,0561818444,0561818555,0561919444,0547973003,0562858585,0505163113,0505330501,0505941919,0506743131,0507432105,0563272727,0563626262,0563636364,0563727272,0563755666,0563755755,0563755999,0564370101,0564373778,0564383838,0564434030,0564439440,0564460644,0564488084,0506065450,0507161669,0507300237,0507305750,0563766777,0563767676,0563772211,0563776688,0563799333,0563811181,0563818111,0563818181,0563822244,0563838386,0563866444,0563866555,0563877888,0563878787,0563885566,0563888212,0564511777,0564533444,0564552299,0564644555,0564644888,0564646463,0564663311,0564665522,0564666764,0564669988,0564700333,0564799900,0564811122,0564844666,0564855444,0564866444,0564866677,0564877555,0564911177,0564949492,0564949493,0564949495,0564949497,0565233388,0502931515,0503243838,0563434348,0563444044,0563484848,0563494949,0563535357,0563535359,0563889944,0563911166,0563929292,0564722333,0564747471,0564747475,0564755888,0564772211,0564880066,0564881488,0565353444,0565353888,0565500220,0565500511,0565500533,0565500770,0565500771,0565500772,0565500773,0565500774,0565500776,0565500778,0565500779,0565502505,0565502522,0565507770,0565509055,0565515050,0565529296,0565530355,0566528855,0502141661,0504251818,0565757572,0565757574,0565757579,0565797979,0565830880,0565885080,0565955222,0565955500,0565955777,0565990088,0565990090,0566626219,0566633805,0566633874,0566649233,0566658380,0566690383,0566698038,0566733355,0566773676,0567010020,0567571122,0567608855,0567618855,0567631122,0567651122,0567654565,0567680200,0567681122,0567691122,0567709011,0502586886,0566010080,0566050080,0566090200,0566111272,0566111575,0566192727,0566222326,0566321211,0567027772,0567494949,0567511313,0567713733,0567805511,0567821122,0567831122,0502205404,0502210902,0502216642,0502216687,0502216690,0502218599,0502252844,0502253244,0502253365,0502262674,0502276697,0502277325,0502277326,0502277413,0502277489,0502292520,0502292987,0502293663,0502484554,0502494991,0502834747,0502835382,0503013108,0503539005,0503550301,0503550306,0503595997,0506403603,0543186888,0543227300,0565610550,0567540040,0567554700,0502387832,0503242552,0503358778,0505075107,0508244664,0543270203,0543305015,0503410340,0503443919,0503500253,0505123636,0505132626,0505147117,0505184484,0505225838,0505840660,0509220079,0509321239,0509363223,0544606048,0505280404,0505885521,0505908998,0506068206,0506069406,0506101221,0506300464,0506336878,0506352522,0506361606,0506367003,0506374774,0544250204,0545212255,0542902020,0503884300,0505085708,0505099530,0505424774,0505484886,0505514505,0505515805,0543009099,0544287171,0544300934,0545616156,0543554445,0543755573,0543800808,0544007499,0544577757,0544666262,0544669696,0544755575,0544949997,0547800808,0563552552,0562299223,0565520880,0565554549,0564949404,0565634848,0565904044,0566390707,0566512323,0566944494,0567600878,0567701550,0562711191,0566601808,0566676719,0568877007,0569333385,0561714666,0543992929,0545332211,0561557100,0561615500,0561808003,0565521200,0565709009,0565752002,0565752007,0565753003,0565808007,0565845400,0565852002,0565885400,0566001655,0566300344,0566373003,0566504640,0566586800,0566591191,0566603440,0544434329,0545004145,0545004224,0545004656,0545004664,0545005036,0545005074,0562007220,0562007233,0562008338,0562009449,0562009492,0565106006,0565350077,0565350088,0565350099,0565351003,0565401001,0566008986,0566009688,0566060048,0566169001,0568668777,0568803330,0568880550,0568881180,0568883830,0568886608,0569055509,0569177719,0569333030,0569366639,0569522259,0569544459,0569588859,0544373004,0544416226,0544416996,0544418338,0544434301,0544434306,0544434309,0544480660,0544481331,0544483131,0544484104,0544484140,0544595004,0544600622,0544600633,0544616004,0544690069,0544699600,0544700141,0544710071,0544809009,0544822800,0544900545,0544919004,0544919009,0544930030,0544940055,0544940077,0544947007,0545001221,0545001252,0545001815,0545002205,0545002656,0545002662,0545003235,0545021001,0545044700,0545059500,0545077800,0545098008,0545121005,0545180080,0545195900,0545202008,0543333989,0544254500,0544467557,0544473663,0544474664,0544474708,0544474713,0544474715,0544489488,0544489499,0544491494,0544492429,0544494292,0544494925,0544494938,0544494956,0544494973,0544494975,0544494976,0544495404,0544495459,0544497494,0544498949,0544500542,0544500548,0544505043,0544509797,0544510707,0544520450,0544525005,0544533003,0544533400,0544548005,0545005083,0545005141,0545005161,0545005171,0545005181,0545005188,0545005211,0545005212,0545005277,0545005503,0545005747,0545005750,0545005768,0545005770,0545005772,0545005774,0545005776,0545005778,0545005779,0545005788,0545005799,0545005939,0545006151,0545006165,0545006252,0545008588,0545008656,0545008685,0545009577,0545009656,0545009858,0545089969,0545115015,0545122225,0545202045,0545225202,0502473131,0502481616,0504074307,0543232325,0543232326,0543232328,0543333171,0543333181,0543333191,0543333464,0543333525,0543333565,0543333646,0543333727,0543333757,0543333767,0543333848,0543333868,0543929292,0543999953,0543999973,0544747476,0545099550,0545111135,0545111150,0545111181,0545111185,0545212211,0504200924,0504373776,0543188881,0543566663,0543585858,0543622226,0543626262,0544288884,0544343435,0544343439,0544343888,0544424533,0544496994,0544497337,0544498118,0544533334,0544545459,0544646469,0503172424,0504334919,0509983773,0508855719,0508610880,0504268868,0504290440,0504309034,0504464504,0504165115,0504204470,0504394344,0504396336,0504405770,0504409089,0504409707,0568113336,0544395656,0544395757,0509867976,0543010905,0544007337,0544008343,0506800363,0506828006,0506939006,0506949006,0507004847,0507005799,0507006373,0507008187,0507009397,0507100176,0507190600,0507200278,0507297900,0507300375,0507300378,0507300379,0507363007,0507455400,0507478004,0507500373,0507674006,0507680086,0507969007,0507969009,0507973009,0508001484,0508003585,0509500494,0509550049,0509569600,0509855900,0543030017,0543030026,0543030027,0543030042,0543030046,0543030047,0543030051,0543030053,0543030056,0543030057,0543030061,0543030068,0543030073,0543030078,0543030085,0543030087,0543038300,0543100131,0543101009,0502515002,0502642400,0502656002,0502838002,0502930039,0503005153,0503005953,0503193900,0503283800,0503400499,0503500531,0503858003,0506038300,0506300367,0506300377,0506400161,0506400246,0506484006,0508986009,0508987009,0509100595,0509200797,0509369600,0509395003,0509396003,0509414009,0543336302,0543500566,0543515003,0503887300,0503889300,0503900193,0503931009,0503959003,0504284800,0504373004,0504699600,0504800584,0504800845,0504858004,0504900694,0505420024,0505600965,0505660085,0505695900,0505700151,0505700375,0505700579,0505818005,0505870200,0505884500,0505956009,0508005383,0508006368,0508151008,0508178700,0508200484,0508300585,0508318100,0508344800,0508387003,0508486004,0508494900,0508685006,0508687006,0508737008,0508785007,0508800543,0501012717,0502357373,0503561919,0503975793,0504186262,0507569191,0544074449,0544258282,0544260808,0544261313,0544263535,0544265353,0544267070,0544269696,0544285353,0544290101,0544294646,0544294848,0544295858,0544296868,0544304646,0544306262,0544306868,0544308282,0544314646,0544315858,0544319696,0544322282,0544327979,0544365757,0544367272,0544368989,0544369595,0544372828,0544373939,0544375050,0544376262,0544376565,0544391313,0544461464,0544504646,0544505408,0544508181,0544516565,0544525959,0544531113,0544536161,0544540484,0544609640,0544787575,0561005818,0561006313,0561008381,0561011481,0561011491,0561011561,0561011731,0561011741,0561011751,0561011831,0561012612,0561012616,0561012717,0561015557,0561043332,0561120707,0561120990,0561121204,0561121209,0561127474,0561128998,0561131535,0561132882,0561167600,0561176700,0561178700,0561186800,0561215500,0561484887,0561489449,0561551400,0561668100,0562006727,0562007740,0562009288,0562011280,0562014004,0562014240,0562016260,0562017102,0562017676,0562018118,0562020919,0562021088,0562022082,0562022542,0562022612,0562124001,0562124747,0562124949,0562131030,0562134747,0562136613,0562137737,0562138312,0562138338,0562140303,0562143314,0562144744,0562145115,0562147979,0562149595,0562151002,0562152020,0562152424,0562152727,0562154141,0562155355,0562156215,0562156363,0562156767,0562157557,0562158787,0562170404,0562172179,0562172424,0562174141,0562174949,0562176060,0562177447,0562178080,0562178585,0562200131,0562201303,0562201909,0562213443,0562214664,0562215656,0562217227,0562219121,0562219696,0562125757,0562126336,0562126886,0562127721,0562128008,0562130505,0562133553,0562139393,0562139913,0562141419,0562141448,0562142525,0562142828,0562145514,0562148787,0562149797,0562153939,0562155445,0562158181,0562170071,0562170210,0562171331,0562172112,0562173217,0544251717,0544254949,0544257171,0544260101,0544261221,0544264343,0544264848,0544267624,0544268181,0544268228,0544272720,0544272992,0544273232,0544275755,0544281616,0544288242,0544292772,0544293924,0544294747,0544312929,0544314949,0544316565,0544319090,0544319898,0544324848,0544395151,0544396767,0544398787,0544407057,0561122921,0561124212,0561125445,0561125885,0561127172,0561128448,0561131325,0561132992,0561221900,0561485548,0561490808,0561493933,0561493941,0561499559,0561500153,0561514400,0562007929,0562009592,0562010114,0562010117,0562010828,0562011811,0562012104,0562012107,0562014848,0562016363,0562016601,0562016616,0562017979,0562020466,0562021331,0562022152,0545932992,0561114767,0561115109,0561117242,0561407007,0561597557,0561705055,0544726274,0544905940,0544906069,0544971497,0545012727,0545082727,0545085108,0545085708,0545086860,0545087805,0545118114,0545172272,0545191771,0545484800,0545485800,0545500570,0545500580,0545500605,0545500654,0545500676,0545591616,0545600654,0545605101,0547003380,0547003575,0547967600,0547976006,0549900141,0549900151,0549900161,0549914004,0547002427,0547002474,0547248880,0547248883,0547248885,0547248886,0547900922,0561150400,0545557505,0545558050,0545559050,0545592900,0545660075,0545660085,0547700210,0547700230,0547700242,0547700244,0547700515,0547713300,0561001225,0561001242,0561005144,0561005150,0561007313,0561405005,0542455545,0542699962,0542699969,0543600044,0543666060,0543899983,0544688333,0545455222,0545477745,0569889400,0543032333,0543036333,0543039333,0545556505,0566756500,0566900767,0567007211,0567007266,0567791900,0567800575,0568701001,0568874004,0568890400,0568984400,0569002429,0569003113,0569003139,0569003393,0542320200,0567525200,0567557800,0567560065,0567595007,0567620500,0567675005,0567697900,0567724004,0567745400,0568115800,0568178700,0568187001,0568201001,0569004249,0569004420,0569004430,0569006494,0569006776,0569007944,0569007955,0569009311,0569009313,0569009336,0569009337,0569009338,0569009343,0569009344,0569009353,0569009355,0569015005,0569023003,0569100696,0569113900,0564384800,0564393900,0564478008,0566002772,0566003868,0566005611,0566005633,0566006747,0566006755,0566006771,0566006788,0566006811,0567007622,0567007818,0567007833,0567007838,0567007844,0567008272,0567008979,0567009397,0567009449,0567009597,0502121564,0502504008,0503232061,0504343983,0505996100,0506690644,0509076167,0509225112,0509575678,0501014505,0502245547,0502287090,0502477994,0507616646,0507783133,0508500119,0508664645,0508817030,0508989041,0509191703,0502828135,0503003901,0503232740,0503433495,0503838529,0503859359,0504101075,0505151430,0505866881,0506161729,0506695532,0507212012,0507404092,0507558847,0507783799,0503552313,0504267167,0504545087,0504776763,0505081418,0505132532,0505341171,0505562511,0506567825,0506638538,0506788177,0507007439,0507373854,0507449655,0507786722,0508166884,0508208240,0508443411,0508664044,0508686571,0508811254,0508855409,0509074347,0509177004,0509209271,0509223236,0543259459,0543816686,0543854424,0543902120,0543906656,0544257030,0544438238,0544574074,0544578287,0544728128,0544754060,0544853235,0544879959,0544893303,0544947547,0545024724,0545094694,0545115530,0545172229,0545399925,0545552164,0545588460,0545588532,0545618218,0545694794,0545913090,0545920320,0547352227,0547440240,0547642228,0547733891,0547733921,0547883839,0547894594,0561485158,0542811888,0542868666,0542868886,0542878887,0542898889,0542919991,0543600303,0543600606,0543600666,0543606660,0543611163,0543626662,0543633030,0543636662,0543636664,0543636665,0543636667,0543636668,0543636669,0543646664,0543666050,0543707770,0545099090,0545200222,0547500505,0543503131,0543515113,0543547878,0543553141,0543764141,0543808302,0543815885,0543819494,0543831515,0543832442,0543833877,0543837377,0543837738,0543867171,0543874949,0543881030,0543889191,0543890505,0543897272,0543898484,0543930690,0543942727,0543948998,0543950707,0543972828,0543973434,0543978181,0543987676,0543990404,0543995992,0545014949,0545019494,0545038787,0545051710,0545053110,0545062260,0545080108,0545115581,0545123737,0545137676,0545141040,0545161221,0545179715,0545190303,0545606363,0545612727,0545621661,0545622332,0545659696,0545662252,0545680606,0545909292,0545970101,0545973636,0545979792,0547715995,0547723434,0547739292,0547743993,0547749393,0547758181,0547758785,0547762929,0547780788,0549925885,0561153003,0561183883,0561191959,0561203737,0561217557,0561224114,0561229797,0561232552,0561242447,0561243223,0561404334,0561415414,0561527557,0561539090,0561545885,0561559919,0561667662,0561674646,0561718484,0561731616,0561747174,0561785885,0561808787,0561848338,0564844466,0545550990,0545550700';
    // $data = numberdetail::select('numberdetails.*')
    // // ->where('number','=', $s)
    // // ->where('newlist','!=', 3)
    // // ->whereIn('identity',['JulyGLD1ED23K', 'JulySILV1ED23K'])
    // ->where('status', 'Available')
    // ->where('call_center','CC12')
    // // ->whereDate('updated_at',Carbon::today())
    // // ->where('channel_type', 'TTF')
    // ->get();
    // $data = '0561001363,0561001373,0561001424,0561001747,0561002421,0561002521,0561003631,0561004515,0561004941,0561005041,0561005580,0561005951,0561007571,0561009023,0561009414,0561011581,0561011791,0561013990,0561019089,0561025454,0561031403,0561033150,0561054848,0561055710,0561058580,0561064640,0561066140,0561074104,0561077120,0561077150,0561080313,0561083434,0561086262,0561088120,0561090994,0561094646,0561096160,0561098108,0561099180,0561120108,0561121610,0561140540,0561140840,0561179080,0561180580,0561188057,0561200821,0561201180,0561202014,0561208180,0561220091,0561221040,0561221393,0561221575,0561223432,0561227010,0561236767,0561247447,0561251500,0561255995,0561256868,0561259292,0561260505,0561260808,0561262060,0561262669,0561263838,0561265621,0561266336,0561273838,0561274545,0561275454,0561276363,0561277667,0561278228,0561278989,0561280303,0561286767,0561290404,0561298686,0561302424,0561305252,0561308484,0561308585,0561309494,0561310230,0561310830,0561310930,0561316010,0561320505,0561330071,0561330106,0561330107,0561339797,0561345858,0561347070,0561356262,0561357070,0561358282,0561359292,0561360505,0561362727,0561363668,0561382525,0561384242,0561385050,0561386060,0561400515,0561400919,0561401120,0561401150,0561403033,0561403939,0561404013,0561404088,0561405353,0561406767,0561407676,0561410740,0561410840,0561425757,0561429797,0561437070,0561441878,0561456363,0561460202,0561485757,0561486886,0561492323,0561496767,0561497575,0561498080,0561507474,0561509190,0561524949,0561527070,0561534949,0561538282,0561540909,0561550102,0561551040,0561560150,0561573232,0561576969,0561580550,0561583232,0561584554,0561584646,0561585852,0561610260,0561621200,0561656006,0561656500,0561669499,0561700212,0561702323,0561765665,0561790770,0561807474,0561854040,0561859292,0561873434,0561934747,0561947575,0562001312,0562006762,0562007472,0562010155,0562013737,0562019797,0562021610,0562056650,0562059590,0562060655,0562070771,0562092905,0562095858,0562099230,0562099320,0562112040,0562127373,0562128001,0562128787,0562130707,0562132929,0562135757,0562136312,0562137713,0562146363,0562146868,0562146969,0562147974,0562149449,0562153737,0562159494,0562171002,0562173837,0562174343,0562175454,0562178878,0562179595,0562201404,0562212602,0562218202,0562307073,0562356969,0562405757,0562552080,0562554540,0562594141,0562693737,0562767557,0562882474,0562882919,0562932121,0562995950,0563021717,0563022360,0563022552,0563024240,0563026565,0563031737,0563032240,0563032626,0563033463,0563033623,0563035235,0563035656,0563036620,0563036760,0563037383,0563037676,0563038780,0563038990,0563039022,0563039690,0563042240,0563046360,0563047704,0563048787,0563049904,0563054141,0563054848,0563057474,0563058308,0563060633,0563063601,0563065350,0563066390,0563067272,0563067307,0563078870,0563081180,0563098308,0563102424,0563102626,0563114646,0563125858,0563134949,0563136868,0563146060,0563151050,0563160909,0563167272,0563182424,0563186116,0563189119,0563190404,0563192626,0563194646,0563195454,0563196262,0563197878,0563202088,0563209191,0563209898,0563218989,0563400737,0563402430,0563405959,0563412626,0563415757,0563416767,0563417979,0563431515,0563461919,0563476161,0563520404,0563546060,0563546262,0563548686,0563563030,0563574545,0563578686,0563586262,0563616113,0563620603,0563636232,0563638386,0563830980,0543011340,0543011380,0543011630,0543012103,0543013104,0543013801,0543015103,0543018686,0543019696,0543023204,0543025250,0543025520,0543025825,0543026026,0543027307,0543027878,0543029390,0543043401,0543041301,0543037570,0543037363,0543037067,0543036836,0543036460,0543035835,0543035635,0543034024,0543203808,0543192525,0543305808,0543302909,0543236936,0543496868,0543470202,0543470101,0543626020,0543603808,0543570404,0543560350,0543543383,0543807676,0543801171,0543712173,0543686080,0543670101,0543670404,0543904304,0544962050,0545439696,0545221040,0545134843,0545132828,0545130530,0545960303,0569705454,0569209910,0569054940,0548880235,0548880237,0548880239,0548880247,0548880248,0548880271,0548880273,0548880274,0548880275,0548880276,0548880435,0548880531,0548880719,0548880794,0548880795,0548881024,0548881025,0548881905,0548881762,0548881763,0548881793,0548881604,0548881537,0548881536,0548881527,0548881526,0548881525,0548882936,0548882817,0548882816,0548882815,0548882814,0548883204,0548883190,0548883147,0548883146,0548883125,0548883124,0548883123,0548883094,0548883023,0548883024,0548883025,0548883026,0548883027,0548883028,0548883029,0548883063,0548883064,0548883065,0548883205,0548883276,0548883274,0548883269,0548883620,0548883621,0548883624,0548883625,0548889425,0548889426,0548889427,0548889428,0548889429,0548889430,0548889431,0548889432,0548889423,0548889421,0548889269,0548889276,0548889283,0548889416,0548889417,0548889418,0548889419,0548889450,0548889451,0548889452,0548889457,0548889518,0548889532,0548889547,0547255508,0545552503,0545005417,0545090102,0543925995,0543921991,0543836969,0543815656,0543812828,0543767997,0501014094,0501028787,0501048383,0501097373,0501104202,0501108660,0501157474,0501195665,0501220071,0501228233,0501345757,0501441727,0501676772,0501748585,0501850606,0501924291,0501943232,0501949229,0501958383,0502012501,0502037302,0502073230,0502081313,0502121634,0502125202,0502150303,0502157373,0502159494,0502218891,0502237887,0502245299,0502276615,0502280505,0502282835,0502284664,0502284747,0502289202,0502293255,0502304949,0502309191,0502317676,0502350404,0502365959,0502367632,0502369797,0502376363,0502383663,0502384747,0502389797,0502393002,0502396363,0502402290,0502414002,0502431919,0502434884,0502456868,0502459191,0502464002,0502492727,0502467474,0502498808,0502500626,0502508484,0502515656,0502525062,0502525941,0502539898,0502568080,0502578752,0502590707,0502626039,0502627337,0502628006,0502634040,0502643939,0502645353,0502658181,0502680101,0502713172,0502804048,0502839494,0502840303,0502847575,0502858070,0502903092,0502929359,0502929530,0502929584,0502929842,0502934392,0502935090,0502936392,0502941515,0502953592,0502956363,0502959050,0502959551,0502959556,0502960290,0502962525,0502963692,0502963939,0502971515,0502992616,0502993411,0502996088,0503003559,0503005636,0503031531,0503032632,0503034834,0503035025,0503037055,0503038078,0503038980,0503069292,0503165858,0503171991,0503176161,0503185885,0503202046,0503202620,0503209230,0503221499,0503223989,0503246969,0503260062,0503262121,0503264949,0503268080,0503271116,0561004041,0561006030,0561010145,0561020070,0561020080,0561030800,0561080020,0561080030,0561333898,0561555707,0561599966,0561622444,0561644888,0561655522,0561710010,0562060300,0562070060,0562070300,0562072227,0562080700,0562082228,0562090400,0562111383,0562111787,0562111898,0562229020,0562333757,0562355999,0562399977,0562400440,0562411155,0562411333,0562411555,0562440040,0562466999,0562477999,0562511144,0562511166,0562533377,0562544111,0562544333,0562544411,0562544888,0562554411,0562555152,0562559988,0562566444,0562577733,0562577744,0562599333,0562599888,0562611188,0562633388,0562633888,0562655999,0562666141,0562688833,0562699111,0562699333,0562699777,0562733888,0562744488,0562755599,0562799444,0562799555,0562799944,0562811555,0562833444,0562844499,0562855333,0562855566,0562877555,0562880080,0562888363,0562888737,0563010400,0563020080,0563040900,0563050010,0563050700,0563080400,0563090800,0563288855,0563288866,0563300447,0563300449,0563300554,0563300559,0563300771,0563300774,0563300775,0563300779,0563337743,0563344005,0563377002,0563377004,0563377006,0563755999,0563772211,0563776688,0563822244,0563866444,0563885566,0563888212,0563889944,0563911166,0564511777,0564552299,0564663311,0564665522,0564666764,0564669988,0564722333,0564755888,0564772211,0564811122,0564866677,0564877555,0564880066,0564911177,0565233388,0565500771,0565500772,0565500773,0565500774,0565500778,0565500779,0565509055,0565533505,0565773311,0565990088,0565990090,0566010080,0566050080,0566090200,0566111272,0566111575,0567008811,0567008822,0567008833,0567008899,0567009988,0567010020,0567050010,0567060020,0567110044,0567110066,0567110099,0567111646,0567112299,0567113388,0567113399,0567114455,0567114488,0567115533,0567115544,0567115588,0567115599,0567116633,0567118844,0567118866,0567119933,0567226633,0567226644,0567229933,0567554400,0567669933,0567669988,0567700114,0567700224,0567700225,0567755001,0567755009,0567766003,0567766009,0568022282,0568443311,0568443322,0568552299,0568553311,0568585808,0568665656,0568762876,0568880282,0569005511,0569005566,0569006070,0569080200,0569096699,0569099779,0569220044,0569553322,0569661122,0569662200,0569663388,0569774466,0561288800,0561442288,0561644433,0562060500,0562062226,0562644477,0562677755,0562866699,0563039933,0563088008,0564700333,0564799900,0565577001,0565662200,0566066226,0568020500,0568878080,0569007766,0569098899,0569668800,0569776688,0561227755,0562050800,0563002266,0563006606,0565515050,0567766008,0561331177,0562711999,0563866555,0565660077,0542010300,0542010400,0542060090,0542060200,0542060206,0542060220,0542062226,0542066060,0542066606,0542070100,0542070207,0542072272,0542082228,0542181888,0542191119,0542200225,0542200227,0542200233,0542200266,0542200441,0542200449,0542202442,0542204022,0542204422,0542204440,0542205550,0542206022,0542208022,0542208880,0542209022,0542220026,0542220206,0542220209,0542220808,0542220990,0542221213,0542221214,0542221216,0542221217,0542221218,0542221219,0542223003,0542224020,0542229009,0542229020,0542233225,0542233226,0542233227,0542233228,0542233229,0542240422,0542255226,0542260622,0542320200,0542331122,0542331313,0542332211,0542332244,0542335533,0542335544,0542337337,0542338822,0542338833,0542338844,0542339393,0542434443,0542455545,0542554455,0542556677,0542557755,0542559559,0542559995,0542622333,0542622999,0542644644,0542811888,0542844443,0542844844,0542878887,0542898889,0542899899,0542899928,0542899989,0542902020,0542911191,0542919991,0542944944,0543001030,0543004455,0543005030,0543005511,0543005533,0543006677,0543009099,0543009944,0543009977,0543023323,0543032333,0543036333,0543039333,0543117711,0543118833,0543222522,0543225222,0543226226,0543227722,0543232224,0543232225,0543232226,0543242224,0543244244,0543244499,0543253232,0543255222,0543266677,0543300114,0543300227,0543300663,0543300668,0543300776,0543302233,0543303022,0543305533,0543306333,0543306363,0543308880,0543310133,0543310331,0543311005,0543311009,0543311050,0543320332,0543322009,0543322337,0543330393,0543330636,0543332929,0543337766,0543338822,0543340030,0543340334,0543344338,0543355002,0543355303,0543366334,0543377303,0543377330,0543377338,0543388111,0543388330,0543388332,0543388339,0543390030,0543390339,0543399004,0543399007,0543399009,0543399330,0543399331,0543399337,0543433888,0543441155,0543442442,,0543443388,0543466111,0543466444,0543477999,0543499444,0543499555,0543525222,0543533388,0543533399,0543544888,0543553444,0543554445,0543555272,0543555414,0543555818,0543555828,0543600303,0543600606,0543603636,0543606660,0543616661,0543626662,0543633222,0543633555,0543636662,0543636664,0543636665,0543636667,0543636668,0543636669,0543646664,0543653636,0543662288,0543666050,0543666060,0543771188,0543772288,0543776622,0543778778,0543779977,0543799799,0543800808,0543992929,0543994994,0543995599,0543997788,0543997979,0543997997,0543998866,0543999050,0543999292,0543999595,0543999898,0544010700,0544010900,0544020300,0544020700,0544020800,0544020900';
    // $data = '0542222571,0543333752,0543333769,0543333937,0543333960,0543333976,0545555163,0545555172,0545555273,0545555287,0545555291,0545555316,0545555604,0545555736,0545555743,0545555790,0545555904,0545555927,0547777183,0547777216,0547777295,0547777341,0547777452,0547777463,0547777603,0547777683,0547777836,0547777952,0547777972,0548888034,0548888064,0548888164,0548888205,0548888294,0548888310,0548888328,0548888431,0548888467,0548888629,0548888762,0548888905,0548888917,0548888937,0562222539,0565555068,0565555084,0565555328,0565555349,0565555462,0565555469,0565555489,0565555632,0565555719,0565555742,0565555916,0565555924,0565555953,0565555964,0565894444,0565912222,0568053333,0568793333,0568888074,0568888095,0568888354,0568888370,0568888469,0568888475,0568888514,0568888631,0568888645,0568888692,0568888713,0568888941,0568888972,0543333281,0543333821,0543333827,0543333871,0543333902,0543333915,0543333986,0545555086,0545555126,0545555134,0545555260,0545555267,0545555341,0545555367,0545555378,0545555392,0545555473,0545555487,0545555609,0545555618,0545555625,0545555639,0545555807,0545555823,0545555831,0545555840,0545555859,0545555864,0545555940,0545555952,0545555973,0545555981,0545555985,0547777128,0547777148,0547777239,0547777246,0547777258,0547777268,0547777358,0547777376,0547777392,0547777403,0547777492,0547777506,0547777528,0547777536,0547777621,0547777637,0547777649,0547777658,0547777813,0547777918,0547777928,0547777936,0548888015,0548888095,0548888126,0548888139,0548888156,0548888235,0548888243,0548888251,0548888265,0548888276,0548888360,0548888378,0548888396,0548888407,0548888413,0548888495,0548888503,0548888517,0548888529,0548888541,0548888572,0548888596,0548888609,0548888618,0548888690,0548888703,0548888712,0548888731,0548888742,0548888752,0548888964,0548888974,0565555032,0565555307,0565555379,0565555384,0565555407,0565555416,0565555427,0565555437,0565555702,0565555708,0565555792,0565555814,0565555826,0565555832,0565555862,0565555891,0565555903,0565723333,0565834444,0568721111,0568751111,0568888034,0568888051,0568888062,0568888310,0568888324,0568888412,0568888421,0568888437,0568888463,0568888546,0568888576,0568888731,0568888751,0568888764,0568888902,0568888920,0568903333';
// $data = '0569507555,0547416622,0547383330,0547439911,0547330990,0547415500,0547431155,0547352200,0547410099,0547362299,0547426655,0547431166';
$data = '0545555129,0545555183,0545555184,0545555249,0562335544,0562336336,0562336622,0562337788,0562339393,0562339993,0562343234,0562366668,0505227711,0505994488,0544080401,0542022225,0562044445,0563755550,0563888843,0543333005,0508380110,0543188822,0545977707,0547607667,0544255553,0543544488,0567792223,0508855247,0544666878,0569101110,0547155520,0545144000,0542955111,0545115666,0509424004,0547888200,0543411144,0543722666,0543822777,0543911444,0544088877,0542220012,0542844333,0542855000,0542877000,0545227778,0547670011,0547772287,0547774467,0547800666,0547966777,0547997444,0542199000,0566006757,0545555126,0545555134,0547606009,0563477707,0567772265,0508893003,0543005355,0547660087,0566004224,0543333281,0543333821,0543333827,0543333892,0543333902,0509047007,0565588808,0568444423,0503270220,0508797676,0503601414,0501087801,0545050406,0544414138,0544626264,0501109707,0544603838,0544655335,0503505081,0505192030,0543113033,0543448440,0562559553,0563393937,0561170555,0569011121,0563792222,0567779077,0567946666,0548882622,0568887795,0561080207,0545452111,0545457770,0508358558,0569579997,0547573737,0509844321,0509609099,0565599332,0566366866,0566116566';
    foreach (explode(',', $data) as $s) {
    // foreach($data as $s){
        // echo $b . '<br>';
        // return $b;
        //  ->OrderBy('status','desc')

            // $s = \App\lead_sale::where('selected_number',$s)->first();
            // $dp = activation_form::select('activation_forms.lead_no','activation_forms.status','activation_forms.activation_selected_no','activation_forms.customer_number','activation_forms.emirate_location','activation_forms.gender','activation_forms.nationality','activation_forms.activation_sr_no','activation_forms.sim_type','plans.plan_name','activation_forms.customer_name','activation_forms.activation_date')
            $dp = activation_form::select('activation_forms.activation_sr_no','activation_forms.activation_selected_no', 'activation_forms.activation_sim_serial_no')
                ->LeftJoin(
                    'plans','plans.id',
                    'activation_forms.select_plan'
                )
                ->where('activation_forms.activation_selected_no',$s)->first();
            // $s = numberdetail::where('number',$s)->first();
        if ($dp) {
            echo $dp->activation_selected_no . '<br>';
            // echo $s->lead_no .','. $s->status .','. $s->selected_number .  '<br>';
            // return $s->status;
            // if ($s->status == 'Hold') {
                // $s->number
                // echo $s->number . ' ' . $s->type . ' ' . $s->status .' '. $s->updated_at.  '<br>';

            //         $k = numberdetail::findorfail($s->id);
            //         // $k->call_center = 'CC11';
            //         $k->status = 'Removed By November 18 List';
            // //         // $k->identity = 'NewMayChange';
            // // $k->newlist = 3;
            //         $k->save();
            //         // return "Done";
            // $kk = \App\lead_sale::where('selected_number',$s->number)->first();
            // echo $s->number . ',' . $s->status . ',' . $s->type . ',' . $s->status . ',' . $s->identity . ',' . $s->created_at . ',' . $s->updated_at . '<br>';
                // }else{

                // }
                // echo 
                // echo $dp->plan_name . '<br>';
                // echo $dp->activation_selected_no .'-'.$dp->activation_sr_no .'-'. $dp->activation_sim_serial_no . '<br>';
                //  echo $dp->activation_selected_no .','. $dp->activation_date .','. 'Our Numbers' .  '<br>';
                //  echo $dp->lead_no .','. $dp->status .','. $dp->activation_selected_no . ',' . $dp->customer_number  . ',' . $dp->emirate_location . ',' . $dp->gender . ',' . $dp->nationality .','. $dp->activation_sr_no .','.$dp->sim_type.','. $dp->plan_name .  '<br>';
                // $k->call_center = 'default';
                // $k->channel_type = 'TTF';
                // $k->identity = 'GLD3T22';
                // $k->book_type = '0';
                // $k->remarks = "Return To Etisalat - TTF - 19 Aug 2022";
                // $k->save();
                // if($s->status == 'Active'){
                // echo $s->number .'--'. $s->passcode . '<br>';
                // }
                //  '<br>';
                    // echo $dp->customer_name . ',' . 'AAMT' . ',' . $dp->customer_number . ',' . $dp->emirate_location . ',' . $dp->activation_selected_no . ',' . $dp->gender . ',' . $dp->sim_type . ',' . $dp->nationality . ',' . $dp->plan_name . ',' . $dp->activation_date . ',' . $dp->activation_sr_no . '<br>';
                // if($s->channel_type == 'ExpressDial'){
                    // echo $s->id  . ',' . $s->number . ',' . $s->channel_type .  ',' . $s->type .   ',' . $s->identity .',' . $s->status . ',' . $s->created_at . ',' . $s->updated_at .'-' . $s->call_center.'<br>';
                // }
            // }
        } else {
            //   $s = numberdetail::select('numberdetails.*')
            // ->where('number',$b)
            // ->first();
            // if($s){
            // //  echo $s->number . ' ' . $s->status . '<br>';
            //     if($s->status == 'Active'){
            //         // echo $s->number . '<br>';
            //         // $k = numberdetail::findorfail($s->id);
            //         // $k->identity = 'June 2021';
            //         // $k->book_type = '0';
            //         // $k->status = 'Available';
            //         // $k->remarks = "June New Add From Active 1919";
            //         // $k->save();
            //     }
            // }
            // echo  $s->number . 'NOT FOUND  <br>';
            //  echo "BR";
        }
        //  if($s){
        //     $k = choosen_number::create([
        //         'number_id' => $s->id,
        //         'user_id' => '152',
        //         'status' => '1',
        //         'agent_group' => 'CC9',
        //         // 'ip_address' => Request::ip(),
        //         'date_time' => Carbon::now()->toDateTimeString(),
        //     ]);
        //      echo $k->id . '<br>';
        //     // $k = numberdetail::findorfail($s->id);
        //     // $k->status = 'Active';
        //     // $k->remarks = "Booked Auto";
        //     // $k->save();
        //  }
        //  update('status','Active');
    }
});
// Route::get('testnumber', function () {
//     // $a = "0501102034,0501114063,0501146050,0501166068,0501184004,0501300344,0501910401,0502005299,0502007097,0502009039,0502017311,0502224596,0502224703,0502225478,0502292100,0502647771,0502666381,0502700204,0502700402,0502954446,0503330596,0503334608,0503526661,0503529888,0503584449,0503842228,0503857666,0503865557,0503897773,0503899976,0503939498,0504152224,0504333579,0504333780,0504461516,0504848995,0505005735,0505007105,0505551793,0505553497,0505553641,0505553860,0505554368,0505839995,0506006756,0506031112,0506063833,0506075511,0506777518,0506808042,0506902006,0507006039,0507196661,0507416999,0507428666,0507466637,0507775960,0507776029,0508800720,0508844560,0543336673,0543341134,0544111838,0544300029,0544343466,0544440683,0544440953,0544441625,0544442693,0544442853,0544443629,0544443702,0544446072,0544446198,0544446734,0544446958,0544446986,0544447842,0544448039,0544449561,0544457545,0545000168,0545000196,0545000986,0545050065,0545056668,0545533753,0547000842,0547111813,0547570009,0547800062,0561000428,0561000849,0562221056,0563040088,0563050099,0563113551,0563311168,0565400027,0566000573,0568811616,0568831117,0568967000,0501901977,0501911220,0501911770,0501911773,0501919943,0501954442,0502323899,0502324030,0502700706,0502775177,0503009031,0503742228,0503777152,0503777183,0503777618,0503777621,0503777863,0503777915,0503877752,0503879991,0503896664,0503896665,0503897774,0503899917,0503899926,0503900103,0503900609,0503923338,0504310040,0505444917,0505444951,0505590070,0507006023,0507293332,0507433328,0507466635,0507933348,0509111487,0509114987,0509622267,0509844469,0543527772,0544424493,0561121911,0561159996,0561177443,0562140005,0562170005,0562250999,0563455569,0563666114,0563970005,0564300086,0564399919,0564600059,0565559456,0566442228,0566616124,0566616129,0566616153,0566616158,0566616175,0566622747,0566626208,0566626209,0566626214,0566626247,0566626248,0566626251,0566940094,0566999103,0566999416,0567172228,0567222173,0567222749,0567340005,0567661611,0567709666,0567778732,0567778736,0567778826,0567779719,0567912000,0568200056,0568444895,0568688820,0568811147,0568840555,0568879990,0568880722,0568919995,0569700062,0569700081,0569888657,0503939566,0503939878,0503995299,0503999257,0503999574,0503999702,0503999731,0504331633,0504333506,0504333539,0504333849,0504343307,0504343828,0504848399,0504848559,0505900605,0506473331,0506477795,0507666109,0507999302,0507999532,0509797022,0509898553,0509898565,0509898755,0566444833,0566464022,0566464473,0566464919,0566556356,0566561117,0566565570,0566656855,0566664795,0566665731,0566665735,0566668369,0566996685,0566665375,0566665862";
//     $a = "0501699539,0562446660,0564856542,0506138515,0504446822,0504446822,0507990033,0503900048,0503237037,0501107979,0507738874,0507116668,0502380060,0507511101,0561101803,0501900043,0504787447,0508411181,0508411181,0504400431,0567000872,0507700207,0509071100,0509458022,0508005550,0504900669,0504900669,0501901123,0502699938,0543133103,0502771225,0504399883,0556656639,0552935253,0506477244,0559787173,0557777447,0557777447,0585934577,0507999517,0509955660,0551949775,0562000051,0525884342,0525884342,0503010528,0503010528,0504446148,0504464324,0503999176,0507776928,0563734343,0563734343,0563734343,0563734343,0509222415,0506617775,0568700807,0565808950,0501277444,0508882364,0554487669,0504424120,0502880885,0527090559,0503535344,0506285551,0505773446,0503010528,0501919768,0506860033,0501004664,0507668801,0507200230,0503368488,0505956669,0509922767,0509985330,0553664617,0502201510,0502201510,0505553573,0509633999,0507110203,0505900150,050740020,050740020,0509650589,0505306333,0506692333,0505507646,0503494493,0503110337,0504001146,0508243111,0507766117,0507833011,0509991511,0506800884,0501060600,0501218880,0507011666,0503406999,0505203111,0509510030,0509960081,0506295111,0504234567,0544000194,0567800094,0503526262,0508650006,0503555992,0564647036,0506450060,0508221666,0543922234,0543922234,0543922234,0503888132,0504442855,0506777442,0508020102,0508020102,0555055911,0567666767,0503773313,0506444960,0501171161,0555999800,0504474266,";

//     foreach (explode(',', $a) as $b) {
//         // echo $b . '<br>';
//         //  ->OrderBy('status','desc')
//     //     $s = numberdetail::select('numberdetails.*')
//     //     ->where('number',$b)
//     //    //  ->where('channel_type','OCP1')
//         //  ->first();
//         $s = lead_sale::where('customer_number',$b)->first();
//          if($s){
//              echo 'Found' . $b . ' <br>';
//             // $k = numberdetail::findorfail($s->id);
//             // $k->delete();
//             // $k->status = 'Active';
//             // $k->remarks = "Booked Auto";
//             // $k->save();

//             //  echo $s->number . ' ' . $s->status . '<br>';
//             //  echo 'Available' . '<br>';
//          }
//          else{
//              echo "Not found" . $b;
//             //  echo "BR";
//          }
//         //  if($s){
//         //     $k = choosen_number::create([
//         //         'number_id' => $s->id,
//         //         'user_id' => '152',
//         //         'status' => '1',
//         //         'agent_group' => 'CC9',
//         //         // 'ip_address' => Request::ip(),
//         //         'date_time' => Carbon::now()->toDateTimeString(),
//         //     ]);
//         //      echo $k->id . '<br>';
//         //     // $k = numberdetail::findorfail($s->id);
//         //     // $k->status = 'Active';
//         //     // $k->remarks = "Booked Auto";
//         //     // $k->save();
//         //  }
//         //  update('status','Active');
//     }
// });
Route::get('/feedback', function () {
    return view('auth.feedback');
    return $posts = lead_sale::whereDate('created_at', Carbon::today())->get();
});
Route::get('/today', function () {
    // return view('auth.feedback');
    $posts = lead_sale::select('lead_sales.*')
        // ->whereDate('updated_at', Carbon::today())->get();
        ->where('status', '1.18')->get();
    foreach ($posts as $k => $value) {
        // echo $k . '<br>';
        // echo $value->id . '<br>';
        $p = lead_sale::findorfail($value->id);
        $p->status = '1.17';
        $p->remarks = 'Time Out, Please Proceed Next Day Immediately';
        $p->save();
    }
});
Route::get('/annotate', 'AnnotationController@displayForm');
Route::post('/annotate', 'AnnotationController@annotateImage');

// google map testing
// route::get('/test',function(){
// return $response = \GoogleMaps::load('geocoding')
// 		->setParam (['address' =>'santa cruz'])
//          ->get();
//         //  return $response->lat;
Route::get('verlead', function () {
    // $k
    // SELECT a.status,b.status, a.customer_name FROM `lead_sales` a INNER JOIN verification_forms b on b.lead_no = a.id where a.status = '1.07'
     $k = verification_form::select('lead_sales.id', 'lead_sales.status', 'verification_forms.status', 'lead_sales.customer_name')
        ->Join(
            'lead_sales',
            'lead_sales.id',
            '=',
            'verification_forms.lead_no'
        )
        ->where('lead_sales.status', '1.04')
        // ->where('verification_forms.status','1.07')
        ->get();
    foreach ($k as $kk) {
        // echo $kk->id . '<br>';
        $p = lead_sale::where('id', $kk->id)->update([
            'status' => '1.04'
        ]);
    }
});
Route::get('/table', function () {
    // return auth()->user()->id;
    $value = lead_sale::select("lead_sales.*")
        ->where('later_date', '!=', '')
        ->where('status', '1.03')
        // ->where('pre_check_agent', auth()->user()->id)
        // ->where('id','17')
        ->get();
    foreach ($value as $key => $l) {
        # code...

        // return $l->later_date;
        $startTime = Carbon::parse($l->later_date);
        $now = Carbon::now()->toDateTimeString();
        $endTime = Carbon::parse($now);
        $totalDuration = $endTime->diffForHumans($startTime);
        // dd($totalDuration);
        // // return $totalDuration;
        if ($totalDuration < '15 minutes before' || $totalDuration > '15 Minutes after') {
            // return "oh yes";
            $count = customer_notification::whereLead_id($l->id)->count();
            if ($count > 0) {
            } else {
                $dd = customer_notification::create([
                    'lead_id' => $l->id,
                    'userid' => $l->pre_check_agent,
                    'type' => 'pending',
                    'status' => '1',
                ]);
            }
            // $k = lead_sale::findorfail($l->id);
            // $k->pre_check_remarks = 'Remarks for later launch the later popup immediately';
            // $k->save();
            // return "done";
            // $s = customer_notification::select('custom_notification.*')
        } else {
            // return "s";
        }
    }
    //  $l = lead_sale::select("lead_sales.*")
    //     ->where('later_date','!=', '')
    //     ->where('pre_check_agent',auth()->user()->id)
    //     // ->where('id','17')
    //     ->first();

    // // return $l->later_date;
    // $startTime = Carbon::parse($l->later_date);
    //  $now = Carbon::now()->toDateTimeString();
    // $endTime = Carbon::parse($now);
    // $totalDuration = $endTime->diffForHumans($startTime);
    // // dd($totalDuration);
    // // // return $totalDuration;
    // if($totalDuration < '15 minutes before' || $totalDuration > '15 Minutes after'){
    //     // return "oh yes";
    //      $dd = customer_notification::create([
    //         'lead_id' => $l->id,
    //         'userid' => $l->pre_check_agent,
    //         'type' => 'later',
    //         'status' => '1',
    //     ]);
    //     // $k = lead_sale::findorfail($l->id);
    //     // $k->pre_check_remarks = 'Remarks for later launch the later popup immediately';
    //     // $k->save();
    //     // return "done";
    //     // $s = customer_notification::select('custom_notification.*')
    // }
    // else{
    //     // return "s";
    // }

    // return Datatables::queryBuilder(DB::table('users'))->make(true);

});
// });
Route::get('/test', function () {
    // ScheduledNotification::create(
    //     Auth::user(), // Target
    //     new ScheduledNotification($order), // Notification
    //     Carbon::now()->addMinute(1) // Send At
    // );
    // return getIp();
    // echo $request->ip();

    $dayAgo = 5; // where here there is your calculation for now How many days
    $dayToCheck = Carbon::now()->subDays($dayAgo);
    // $model->;
    $d = lead_sale::select('lead_sales.selected_number', 'lead_sales.created_at', 'lead_sales.updated_at')
        //  $d = numberdetail::select('numberdetails.*','users.email','choosen_numbers.id as cid')
        ->Join(
            'numberdetails',
            'lead_sales.selected_number',
            'numberdetails.id'
        )
        //  ->Join(
        //      'users','users.id','choosen_numbers.user_id'
        //  )
        // ->where('numberdetails.status','Reserved')
        // ->where('numberdetails.channel_type','TTF')
        ->get();
    foreach ($d as $dd) {

        // return $dd->id .'-'. $dd->cid;

        // $d = numberdetail::findorfail($dd->id);
        // $d->status = 'Available';
        // $d->save();
        // $de = choosen_number::findorfail($dd->cid);
        // $de->delete();

        // $dd->
        // $k = $dd->updated_at->diffForHumans() . '<br>'; // 2 days ago
        // if($k > '5 Days ago'){
        // return "boom";
        echo $dd->updated_at->diffForHumans() .  '<br>';
        // }
        // else{
        // echo 'Boom 2' . $dd->number . '<br>';
        // return "boom2";
        // }

    }


    // $sendAt = Carbon::now()->addMinutes(2);
    // Auth::user()->notifyAt(new OneWeekAfterNotice(), $sendAt);

    // return view('email.du-table');
    // return Request::ip();
    // return view
    // $origin = '25.3416817,55.391809';
    // $destination = '25.2778584,55.3832735';

    //  $response = \GoogleMaps::load('distancematrix')
    //     ->setParam([
    //         'origins'          => $origin,
    //         'destinations'     => $destination,
    //         // 'mode' => 'driving' ,
    //         // 'language' => 'fr',

    //     ])->get();
    // $res = json_decode($response);
    // // dd($res);
    // // dd($res['row);
    // // return $res->rows->elements->duration;
    // foreach($res->rows as $resp) {
    //     foreach($resp->elements as $dist) {
    //     //     // dd($dist->distance);
    //         // dd($dist);
    //         foreach($dist->duration as $dt){
    //             // dd($dt);
    //             $d = $dt;
    //         }
    //         foreach($dist->distance as $ds){
    //             // dd($ds);
    //             $d = $ds;
    //         }


    //     }
    // }
    // return view('dashboard.test',compact('res'));

    // echo $ds;

    // return $ds;
    // return $d;
    // return $res = json_decode($response);
    // foreach($res->routes as $resp) {
    //     foreach($resp->legs as $dist) {
    //         dd($dist->distance);
    //     }
    // }

});

Route::get('/send-mail', function () {
    $name = 'Salman';
    // $number = 'Salman';
    // $alternativeNumber = 'Salman';
    // $Email = 'Salman';
    // $details = [
    //     'title' => 'Mail from Home Internet Service',
    //     'body' => 'Customer Details',
    //     'CustomerName' => $name,
    //     'CustomerNumber' => $number,
    //     'AlternativeNumber' => $alternativeNumber,
    //     'CustomerEmail' => $Email,
    // ];

    // \Mail::to('parhakooo@gmail.com','kkashifs@gmail.com','salmanahmed334@gmail.com')->send(new \App\Mail\DuLeadForm($details));
    // dd("Email is Sent.");
    $data = array(
        'name' => $name,
        'email' => 'parhakooo@gmail.com',
        // 'text'=> $request->text,
        // 'category'=> $request->category,
        // 'company'=> $request->company,
        // 'number'=> $request->number
    );
    $files = 'http://callvel.test/images/etisalat.png';
    \Mail::send('email.DuFormMail', compact('data'), function ($message) use ($data, $files) {
        $message->from($data['email']);
        $message->to('parhakooo@gmail.com')->subject($data['name'] . ' - ' . $data['name']);

        // if(count($files > 0)) {
        //     foreach($files as $file) {
        // $message->AddAttachment( $files , 'etisalat' );
        $message->attach(public_path('images'), [
            'as' => 'etisalat.png',
            'mime' => 'application/image',
        ]);
        // $message->attach($files);
        //             'as' => $file->getClientOriginalName(), // If you want you can chnage original name to custom name
        //             'mime' => $file->getMimeType())
        //         );
        //     }
        // }
    });
});
Route::get('sendbasicemail', 'MailController@basic_email');

Route::get('/email', function () {
    //    Mail::to('salmanahmed334@gmail.com')->send(new WelcomeMail('p'));
    // MailTemplate::create([
    //     'mailable' => WelcomeMail::class,
    //     'subject' => 'Welcome, {{ name }}',
    //     'html_template' => '<p>Hello, {{ name }}.</p>',
    //     'text_template' => 'Hello, {{ name }}.'
    // ]);

    // Mail::to($user->email)->send(new WelcomeMail($user));

    // $to_name = ‘RECEIVER_NAME’;
    // $to_email = ‘RECEIVER_EMAIL_ADDRESS’;
    // $data = array(‘name’=>”Ogbonna Vitalis(sender_name)”, “body” => “A test mail”);
    // Mail::send(‘emails.mail’, $data, function($message) use ($to_name, $to_email) {
    // $message->to($to_email, $to_name)
    // ->subject(Laravel Test Mail’);
    // $message->from(‘SENDER_EMAIL_ADDRESS’,’Test Mail’);
    // });

});
Route::resource('/feedback', 'CustomerFeedBackController');
Route::resource('/number-system', 'NumberdetailController');
Route::get('/json', function () {
    // return response()
    // $ch = curl_init("https://demo-ipg.ctdev.comtrust.ae");
    // $TransactionID = '2';
    // $sam = '21';

    // $endpoint = "https://mshastra.com/sendsms_api_json.aspx";
    // $client = new \GuzzleHttp\Client();
    // $id = 5;
    // $value = "ABC";

    // return $response = $client->request('POST', $endpoint, ['query' => [
    //     'key1' => $id,
    //     'key2' => $value,
    // ]]);

    // url will be: http://my.domain.com/test.php?key1=5&key2=ABC;

    // return $statusCode = $response->getStatusCode();
    // return $content = $response->getBody();
    // $ch = curl_init("https://mshastra.com/sendsms_api_json.aspx");

    // $jonRequest = json_encode(array($arr_sendRequest), JSON_FORCE_OBJECT);

    // $jonRequest = json_encode(array($arr_sendRequest), JSON_FORCE_OBJECT);
    // print_r($jonRequest);
    // $ch = curl_init();
    //  curl_setopt($ch, CURLOPT_URL, $url);
    //  curl_setopt($ch, CURLOPT_POST, 0);
    //  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    // curl_setopt($ch, CURLOPT_POSTFIELDS, $jonRequest);
    //   $result = curl_exec($ch);
    // $fields = http_build_query($_POST);
    $sam = rand(0323, 3123128);
    $arr_sendRequest['user'] = '20091153';
    $arr_sendRequest['pwd'] = "Core!5Core";
    $arr_sendRequest['number'] = "9710506017447";
    $arr_sendRequest['msg'] = "Your One Time OTP IS =>" . $sam;
    $arr_sendRequest['sender'] = "SMS Alert";
    $arr_sendRequest['language'] = "Unicode";
    $k = array($arr_sendRequest);
    $jon = json_encode($k);
    $url = 'https://mshastra.com/sendsms_api_json.aspx';
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json', 'Accept: application/json'));
    curl_setopt($ch, CURLOPT_POST, 1);

    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $jon);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 3);
    return $result = curl_exec($ch);
    //       $result = json_decode($result, true);
    //         foreach($result as $i => $v)
    //             {
    //                 echo $v.'<br/>';
    //             }
    //     return $result[''];
    //     return $ch;
    //      $response = curl_exec($ch);
    //      $err = curl_error($ch);  //if you need
    //      curl_close ($ch);
    //      return $response;
    //     $array = json_decode($jonRequest, true);
    //     // echo "<pre>";
    //     // print_r($array);
    //     // return $ch;
    //     curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
    //     curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    //     curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    //     $output = curl_exec($ch);
    //     curl_close($ch);


    //     return response['response'] = json_decode($output);



    //     // print $jonRequest;
    //     curl_setopt($ch, CURLOPT_HEADER, 0); /* Set to 1 to see HTTP headers, otherwise 0 or XML reading will not work */
    //     curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type:application/json', 'Accept:application/json'));
    //     curl_setopt($ch, CURLOPT_FORBID_REUSE, 1);
    //     // curl_setopt($ch, CURLOPT_PORT, 2443);
    //     curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1);
    //     curl_setopt($ch, CURLOPT_POST, 1);
    //     curl_setopt($ch, CURLOPT_POSTFIELDS, $jonRequest);
    //     // // curl_setopt($ch, CURLOPT_CAINFO, dirname(__FILE__) . "/ca.crt"); /* Location in same folder as this file */
    //     curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    //       $result = curl_exec($ch);
    //     // return "s";
    //      print json_decode($result);
    //     if ($result === false)
    //     echo "Error: " . curl_error($ch);
    //     else {
    //         $result = json_decode($result, true);
    //     //     echo "<pre>";
    //     //     print_r($result);
    //     //     // echo $result['1'];

    //     }
    //     return "S";
    //             ->header('Content-Type', 'json');
    //     {"user":"20091153","pwd":"Core!5Core","number":"9710522221220","msg":"Thank you for applying E-Life Services","sender":"SMS Alert","language ":"Unicode"}
    //     return response()->json([
    //         'user' => '20091153',
    //         'pwd' => 'Core!5Core',
    //         'number' => '9710522221220',
    //         'msg' => 'Thank you for applying E-Life Services',
    //         'sender' => 'SMS Alert',
    //         'language' => 'Unicode',
    //     ]);
    //  $accountSid = config('app.twilio')['TWILIO_ACCOUNT_SID'];
    //  $authToken = config('app.twilio')['TWILIO_AUTH_TOKEN'];
    // try
    //  {
    // //  $client = new Client();
    //  $result = $client->post('https://mshastra.com/sendsms_api_json.aspx',
    //  ['form_params' => [
    //  'Body' => 'CODE: '. $request->code, //set message body
    //  'To' => $request->contact_number,
    //  'From' => '+17049819803' //we get this number from twilio
    //  ]]);
    //  return $result;
    //  }
    //  catch (Exception $e)
    //  {
    //  echo "Error: " . $e->getMessage();
    //  }
});


Route::get('/', function () {
    // return view('welcome');
    return redirect(route('admin.login'));
});
Route::get('YearlyChartCallCenter', 'ChartController@YearlyChartCallCenter');



// 

Route::get('/SrNumber', function () {

// $d = '0569590999,0501050558,0504232330,0544797977,0569655557,0504029009,0504465504,0544666618,0506655068,0544429200,0502401117,0505333128,0544418100,0509111269,0545999559,0504705551,0502220417,0504555964,0506661097,0545556640,0544662663,0561001949,0501001949,0508655561,0562999322,0544244214,0508008775,0564972222,0544505099,0522022084,0563060033,0543444022,0566096900,0545131515,0545051500,0542090500,0544060644,0501234118,0567447747,0562020773';
//     // foreach()
// foreach (explode(',', $d) as $s) {
//     $zp = activation_form::where('activation_selected_no',$s)->first();
//     $zp->activation_sr_no . '<br>'; 
//     // echo $zp->activation_sim_serial_no . '<br>'; 
// }

});
// 
Route::get('/role-system', function () {

    auth()->user()->revokePermissionTo(['CC12']); // for revoke permission to user

    // auth()->user()->givePermissionTo('CC2');
    // Permission::create(['name' => 'CC12']);
    // auth()->user()->givePermissionTo('CC12');

    // Role::create(['name' => 'DNCRManager']);

    // auth()->user()->givePermissionTo('ExpressDial');

    // Role::create(['name' => 'TeamLeader']);

    // return "Floor Manager Created";
    
});
Route::get('/test-sms', function (Request $request) {
    // $number = [
    //     'phone' => '923121337222'
    // ];
    // $number = ['phone'
    // => [
    //     '923121337222'
    // ]];
    // return $number;
    // return response()->json(['error' => ], 200);
    // $number = array();
    // cord@gmail.com
    $number = \App\User::select('users.phone')
        ->where('role', 'Emirate Coordinator')
        // ->where('email', 'Aroojfatima@cord.com')
        // ->where('email', 'amararoshandin@cord.com')
        ->get();
    $nz[] = '923121337222';
    foreach ($number as $num) {
        // $nz
        $nz[] = $num->phone;
    }
    return $nz;
    $sms_data = 'Test';
    foreach ($nz as $n) {
        // https://sms.montymobile.com/API/SendSMS?username=DIALUPIT&apiId=tqv9qsQt&json=True&destination=923121338222&source=DIALUP-CC&text=Sample

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, 'https://sms.montymobile.com/API/SendSMS?username=DIALUPIT&apiId=tqv9qsQt&json=True&destination=' . $n . '&source=DIALUP-CC&text=' . urlencode($sms_data));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);
    }

    // return $number;

});

// return $number;
// dd($number);
// $Second = \Carbon\Carbon::createFromFormat('H:i a', '05:00 AM');
// $SecondEnd = \Carbon\Carbon::createFromFormat('H:i a', '06:12 AM');
// $currentTime = \Carbon\Carbon::now();
// if ($currentTime->between($Second, $SecondEnd, true)) {
//         return "BETWEEN";
// }
// //
// $startTime = \Carbon\Carbon::createFromFormat('H:i a', '06:00 AM');
// $endTime = \Carbon\Carbon::createFromFormat('H:i a', '06:08 AM');
// $currentTime = \Carbon\Carbon::now();

// if ($currentTime->between($startTime, $endTime, true)) {
//     // dd('In Between');
//     return "IN BETWEEN";
// } else {
//     // dd('In Not Between');
//     return "Not In Between";
// }
//
// return Request::ip();
// $lead = lead_sale::select('lead_sales.saler_id')->findorfail('123');
//  $leadnumber = \App\SMSFinalUser::select('users.phone','users.agent_code')
// ->Join('users', 'users.id', 's_m_s_final_users.userid')
// ->where('s_m_s_final_users.userid', $lead->saler_id)
// ->first();
//  $coordinator = \App\User::where('agent_code',$leadnumber->agent_code)->where('role','manager')->first();
//  $maincord = \App\User::where('role', 'MainCoordinator')->first();

// $number = array();
// $number[] = $leadnumber->phone;
// $number[] = $coordinator->phone;
// // $number[] = $maincord->phone;
// $number[] = '923121337222';
// dd($number);
//     foreach($number as $num){
// echo $num . '<br>' ;
//     }

// $data = "Lead No : CC8-9261-Jul-2021
// Remarks: call again now Remarks By Abdul Kareem
// url to open lead";
// // $data ="Zoom";
// $ch = curl_init();
// $number = array('923121337222','923422708646');
// foreach($number as $numb){
//     curl_setopt($ch, CURLOPT_URL, 'https://sms.montymobile.com/API/SendSMS?username=DIALUPIT&apiId=tqv9qsQt&json=True&destination='.$numb.'&source=ACE&text=' . urlencode($data));
//     curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

//     $result = curl_exec($ch);
//     if (curl_errno($ch)) {
//         echo 'Error:' . curl_error($ch);
//     }
// }
// curl_close($ch);
// return $result;
// echo $result;

// return view('welcome');
// Auth::logout();
// $url = "http://sms.montymobile.com/API/SendBulkSMS";

// $parameters = [
//     "api_token" => "da43d3296011bbde993075d6266aae098a51ec5641",
//     "api_secret" => "@Salman123!!!",
//     "to" => "923213034932",
//     "from" => "Lifetimesms",
//     "message" => "Testing SMS UFONE",
// ];

// $ch = curl_init();
// $timeout  =  30;
// curl_setopt($ch, CURLOPT_URL, $url);
// curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
// curl_setopt($ch, CURLOPT_HEADER, 0);
// curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
// curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,  2);
// curl_setopt($ch, CURLOPT_POST, 1);
// curl_setopt($ch, CURLOPT_POSTFIELDS, $parameters);
// curl_setopt($ch, CURLOPT_TIMEOUT, $timeout);
// $response = curl_exec($ch);
// curl_close($ch);

// echo $response;
// $headers = array();
// $response = Requests::get('https://sms.montymobile.com/API/SendSMS?username=DIALUPIT&apiId=tqv9qsQt&json=True&destination=&source=&text=', $headers);

// return redirect(route('login'));
// });
Route::get('/logout', function () {
    // return view('welcome');
    Auth::logout();
    return redirect(route('login'));
});
// Route::get('users/{id}', function ($id) {
// Route::get('reporthome', 'HomeController@reporthome');
Route::get('reporthome', 'HomeController@reporthome')->name('category.main.report.home');


// });
Route::get('Online', 'HomeController@Online');
Route::get('SMSFinal', 'HomeController@SMSFinal');
Route::post('OnlineStatus', 'AjaxController@OnlineStatus')->name('Online.Status.Ajax');
Route::get('number-system-{slug}', 'AjaxController@numbersystem')->name('number-system-ttf');
Route::get('ClientIp', 'AjaxController@ClientIp');
Route::get('generate-number/{slug}', 'NumberController@generate_number')->name('generated.number')->middleware('auth');
Route::get('my-generate-number/{number}', 'NumberController@my_generate_number')->name('my.generated.number')->middleware('auth');
Route::post('customer-number-checker', 'NumberController@customer_number_checker')->name('number.tester')->middleware('auth');
Route::post('customer-feedbac-submit', 'NumberController@submit_feedback_number')->name('number.feedback.submit')->middleware('auth');
Route::get('customer-number-dtl/{slug}', 'NumberController@customer_number_dtl')->name('customer.number.dtl')->middleware('auth');
Route::get('ajaxRequest', 'AjaxController@ajaxRequest');
// Route::get('ajaxRequest/{number}', 'AjaxController@ajaxRequestPersonal');
Route::post('callcenter_whatsapp_forecast', 'AjaxController@callcenter_whatsapp_forecast')->name('callcenter_whatsapp_forecast');

Route::post('agent_whatsapp', 'AjaxController@agent_whatsapp')->name('agent_whatsapp');
Route::post('agent_whatsapp_pending', 'AjaxController@agent_whatsapp_pending')->name('agent_whatsapp_pending');
Route::post('ajaxRequest', 'AjaxController@ajaxRequestPost')->name('ajaxRequest.post');
Route::post('leadrejectedAgent', 'AjaxController@leadreject')->name('lead.rejected');
Route::post('ChatRequest', 'ChatController@ChatPost')->name('chat.post');
Route::post('ajaxRequest1', 'AjaxController@ajaxRequestItPost')->name('ajaxRequest.itpost');
Route::post('PlanType', 'AjaxController@PlanType')->name('ajaxRequest.PlanType');
Route::post('PlanType2', 'AjaxController@PlanType2')->name('ajaxRequest.PlanType2');
Route::post('ajaxRequest2', 'AjaxController@ajaxRequestItPlan')->name('ajaxRequest.itplan');
Route::post('ReportRequest', 'AjaxController@report')->name('ajaxRequest.report');
Route::post('CheckPackageName', 'AjaxController@CheckPackageName')->name('ajaxRequest.CheckPackageName');
Route::post('CheckChannelPartner', 'AjaxController@CheckChannelPartner')->name('CheckChannelPartner');
Route::get('monthly-activation-etisalat', 'ExportController@monthly_activation_etisalat')->name('monthly.activation.etisalat')->middleware('auth');
Route::get('PrefixDownload', 'ExportController@PrefixDownload')->name('PrefixDownload')->middleware('auth');
// 
Route::get('non-active-report', 'ExportController@non_active_report')->name('non.active.report')->middleware('auth');
Route::get('all-followup', 'ExportController@allfollowup')->name('all.follow.up')->middleware('auth');

// 
Route::post('checkNumData', 'AjaxController@checkNumData')->name('ajaxRequest.checkNumData')->middleware('role:Admin|superAdmin');
Route::post('ChannelReport', 'AjaxController@ChannelReport')->name('ajaxRequest.ChannelReport')->middleware('role:Admin|superAdmin');
Route::post('SaleReportRequest', 'AjaxController@SaleReport')->name('ajaxRequest.SaleReport')->middleware('role:Admin|superAdmin');
Route::post('SaleDtlReportRequest', 'AjaxController@DtlReport')->name('ajaxRequest.DtlReport')->middleware('role:Admin|superAdmin');
Route::post('ReportByDay', 'AjaxController@ReportByDay')->name('ajaxRequest.ReportByDay')->middleware('role:Admin|superAdmin');
Route::post('OTP', 'AjaxController@OTP')->name('ajaxRequest.OTP')->middleware('role:Admin|superAdmin');
Route::post('NumberByType', 'AjaxController@NumberByType')->name('ajaxRequest.NumberByType');
Route::post('NumberByCallCenter', 'AjaxController@NumberByCallCenter')->name('ajaxRequest.NumberByCallCenter');
Route::post('NumberByType2', 'AjaxController@NumberByType2')->name('ajaxRequest.NumberByType2');
Route::post('ReservedNum', 'AjaxController@ReservedNum')->name('ajaxRequest.ReservedNum');
Route::get('guest-res', 'AjaxController@guest_res')->name('guest-res')->middleware('role:Admin|superAdmin');
Route::post('BookNUm', 'AjaxController@BookNum')->name('ajaxRequest.BookNum')->middleware('auth');
Route::post('RevNum', 'AjaxController@RevNum')->name('ajaxRequest.RevNum')->middleware('auth');
Route::post('RemoveRevive', 'AjaxController@RevNum2')->name('Remove.RevNum')->middleware('auth');
Route::post('HoldNum', 'AjaxController@HoldNum')->name('ajaxRequest.HoldNum')->middleware('auth');
Route::post('AssignLead', 'AjaxController@AssignLead')->name('ajaxRequest.AssignLead')->middleware('auth');
Route::post('VerifyNum', 'AjaxController@VerifyNum')->name('ajaxRequest.VerifyNum')->middleware('auth');
Route::post('BulkActive', 'AjaxController@BulkActive')->name('BulkActive')->middleware('auth');
Route::post('BulkRevive', 'AjaxController@BulkRevive')->name('BulkRevive')->middleware('auth');
Route::post('VerifyNum2', 'AjaxController@VerifyNum2')->name('ajaxRequest.VerifyNum2')->middleware('auth');
Route::post('VerifyNum22', 'AjaxController@VerifyNum22')->name('ajaxRequest.VerifyNum22')->middleware('auth');
Route::post('Revert', 'AjaxController@Revert')->name('ajaxRequest.Revert')->middleware('auth');
Route::post('AcceptLead', 'AjaxController@AcceptLead')->name('ajaxRequest.AcceptLead')->middleware('auth');
Route::post('assign_me', 'AjaxController@assign_me')->name('ajaxRequest.Assignme')->middleware('auth');
Route::post('CheckPendingLead', 'AjaxController@CheckPendingLead')->name('ajaxRequest.CheckPendingLead')->middleware('auth');
Route::post('Reject', 'AjaxController@reject')->name('ajaxRequest.Reject')->middleware('auth');
Route::post('ManagerReject', 'AjaxController@ManagerReject')->name('ajaxRequest.ManagerReject')->middleware('auth');
Route::post('NumberActivation', 'AjaxController@NumberActivation')->name('ajaxRequest.NumberActivation')->middleware('auth');
Route::get('/skill-auto-complete-multi-channel', 'AjaxController@dataAjaxMultiChannel')->name('skill-auto-complete-multi-channel')->middleware('auth');
Route::get('/skill-auto-complete', 'AjaxController@dataAjax')->name('skill-auto-complete')->middleware('auth');
Route::get('/search-number', 'AjaxController@search_number')->name('search-number')->middleware('auth');
Route::get('/search-customer-number', 'AjaxController@search_customer_number')->name('search-number')->middleware('auth');
Route::get('/search-lead-number', 'AjaxController@search_lead_number')->name('search-number')->middleware('auth');
Route::post('lead-search', 'AjaxController@lead_search')->name('lead.no.search')->middleware('auth');
Route::get('number-search-mail', 'AjaxController@number_search_lead_mail')->name('number.search.lead.mail');
Route::post('number-search-mail-fetch', 'AjaxController@number_search_lead_mail_fetch')->name('number.search.lead.mail.fetch');

Route::post('number-search', 'AjaxController@number_search_lead')->name('number.search.lead');
Route::post('number-search-original', 'AjaxController@number_original_lead')->name('number.original.lead');
Route::post('number-search-original-reserved', 'AjaxController@number_original_lead_reserved')->name('number.original.lead.reserved');
Route::post('number-save-reserved', 'AjaxController@numbersavereserved')->name('numbersavereserved');
Route::post('number-reserved-search', 'AjaxController@number_reserved_search_lead')->name('number.reserved.search.lead');
Route::post('customer-number-search', 'AjaxController@customer_number_search_lead')->name('customernumber.search.lead');
Route::post('update-lead-number', 'AjaxController@update_lead_number')->name('update.lead.number');
Route::post('update-number', 'AjaxController@update_number')->name('update.number');
Route::get('vision-name', 'AjaxController@vision_name');
Route::get('vision', 'AjaxController@vision');
// Route::get('MainReport', 'ReportController@DailyReport')->name('daily.report')->middleware('role:Admin|superAdmin');
Route::get('MainReport/{channel}', 'ReportController@DailyReport')->name('daily.report')->middleware('auth');
Route::get('PreviousReport/{channel}', 'ReportController@PreviousReport')->name('previous.report')->middleware('role:Admin|superAdmin');
Route::get('DailyReport-{slug}', 'ReportController@DailyReportCallCenter')->name('daily.report.callcenter')->middleware('role:Admin|superAdmin|MainCoordinator');
Route::get('NewMainReport/{channel}', 'ReportController@NewDailyReport')->name('NewDailyReport')->middleware('role:Admin|superAdmin');
Route::get('MonthlySummary-{slug}', 'ReportController@MonthlyReportCallCenter')->name('daily.report.summary')->middleware('auth');
//->middleware('role:Admin|superAdmin');
Route::get('previous-report', 'ReportController@PreviousReportForm')->name('PreviousReportForm')->middleware('auth');
Route::post('ShowPreviousReport', 'ReportController@ShowPreviousReport')->name('ShowPreviousReport')->middleware('auth');
Route::get('PreviousReportCustomer/start_date/{start_date}/end_date/{end_date}/channel/{channel_partner}/', 'ReportController@PreviousReportCustomer')->name('PreviousReportCustomer')->middleware('role:Admin|superAdmin');
// 
Route::get('MonthlyActivation', 'ReportController@MonthlyActivation')->name('monthly-activation')->middleware('role:Admin|superAdmin');
Route::get('vision-sr', 'AjaxController@vision_sr');
Route::get('CordinationFollow', 'AjaxController@CordinationFollow')->name('cordination.follow')->middleware('role:Admin|superAdmin');
Route::get('ActivationFollow', 'AjaxController@ActivationFollow')->name('activation.follow')->middleware('role:Admin|superAdmin');
Route::get('AllRemovedNumber', 'AjaxController@AllRemovedNumber')->name('all.removed')->middleware('role:Admin|superAdmin');
Route::get('MasterLogin/{id}', 'MasterController@MasterLogin')->name('master.login')->middleware('role:Admin|superAdmin');

Route::get('MyLog', 'AjaxController@MyLog')->name('my.log')->middleware('role:Admin|superAdmin');
Route::get('ElifeLog', 'AjaxController@ElifeLog')->name('elife.log')->middleware('role:Admin|superAdmin');
Route::get('ViewElifeUser', 'AjaxController@ViewElifeUser')->name('elife.log.user')->middleware('role:Admin|superAdmin');
Route::get('ElifeNoAnswer', 'AjaxController@ElifeNoAnswer')->name('elife.log.NoAnswer')->middleware('role:Admin|superAdmin');
Route::get('final-cord-lead', 'WhatsAppController@FinalCordLead')->name('verification.final-cord-lead')->middleware('auth');
Route::get('our-cord-lead/{call_center}', 'WhatsAppController@OurFinalCordLead')->name('our.final-cord-lead')->middleware('auth');

Route::post('ocr', 'AjaxController@OCR')->name('ocr.submit');
Route::post('ocr-back-new', 'AjaxController@ocr_back_new')->name('ocr.back.submit');
Route::post('NumberEdit', 'AjaxController@NumberEdit')->name('NumberEdit');
Route::post('ocr-sr', 'AjaxController@ocr_sr')->name('ocr-sr.submit');
Route::post('ocr-name', 'AjaxController@ocr_name')->name('ocr-name.submit');
Route::post('ocr-name-new', 'AjaxController@ocr_name_new')->name('ocr-name-new.submit');
Route::post('LeadReAssign', 'AjaxController@LeadReAssign')->name('lead.re-assign');
Route::post('activate-lead', 'ActivationController@ActiveNew')->name('activate-lead');
Route::post('activate-nonverified', 'ActivationController@ActiveNewNonVerified')->name('activate-nonverified');
Route::post('confirm-lead', 'ActivationController@ConfirmLead')->name('confirm-lead');
Route::post('activate-elife-lead', 'ActivationController@ActiveElife')->name('activate-elife-lead');
Route::post('activate-elife-plan', 'ActivationController@ActiveElifePlan')->name('activate-elife-plan');
Route::post('reject-elife-plan', 'ActivationController@RejectElifePlan')->name('reject-elife-plan');
Route::post('FetchAgent', 'AgentController@FetchAgent')->name('fetch.agent.dtl');
Route::post('AddTargetAdmin', 'AgentController@AddTargetAdmin')->name('add.target.admin');

//
Route::get('ReservedAvailableExport', 'ExportController@ReservedAvailableExport')->name('ReservedAvailableExport')->middleware('role:Admin|superAdmin');
Route::get('LeadAvailableNumber', 'ExportController@LeadAvailableNumber')->name('LeadAvailableNumber')->middleware('role:Admin|superAdmin');
Route::get('monthly-export-{id}', 'ExportController@monthly_export')->name('monthly_export')->middleware('auth');

Route::get('daily-export', 'ExportController@export_daily_report')->name('export_daily_report')->middleware('role:Admin|superAdmin');
Route::get('RecordingNullMonth', 'ExportController@RecordingNullMonth')->name('RecordingNullMonth')->middleware('role:Admin|superAdmin');
Route::get('available-export', 'ExportController@available_export')->name('available.export')->middleware('role:Admin|superAdmin');
Route::get('active-export', 'ExportController@active_export')->name('active.export')->middleware('role:Admin|superAdmin');

Route::get('daily-activation', 'ExportController@daily_activation_export')->name('daily.activation.report')->middleware('role:Admin|superAdmin');
Route::get('monthly-activation', 'ExportController@monthly_activation_export')->name('monthly.activation.report')->middleware('role:Admin|superAdmin');
Route::get('monthly-activation-express', 'ExportController@monthly_activation_export_express')->name('monthly.activation.report.ed')->middleware('role:Admin|superAdmin');
Route::get('my-monthly-activation', 'ExportController@my_monthly_activation_export')->name('my.monthly.activation.report')->middleware('role:Admin|superAdmin');
Route::get('my-previous-monthly-activation', 'ExportController@my_previous_monthly_activation_export')->name('my.previous.monthly.activation.report')->middleware('auth');
Route::get('AgentReport/{id}', 'ExportController@AgentReport')->name('AgentReport')->middleware('role:Admin|superAdmin');
Route::get('floorlead/{id}', 'HomeController@floorlead')->name('floor.lead')->middleware('auth');
Route::get('verification-dept', 'HomeController@verificationdept')->name('verification.dept')->middleware('auth');
Route::get('AgentMonthlySale/{id}', 'UserController@AgentMonthlySale')->name('AgentMonthlySale')->middleware('role:Admin|superAdmin');
Route::get('CallCenterMonthlySale/{id}', 'UserController@CallCenterMonthlySale')->name('AgentMonthlySale')->middleware('auth');


Route::get('UserLog/{id}', 'ExportController@UserLog')->name('UserLog')->middleware('role:Admin|superAdmin');
Route::get('AttendanceSystem/{id}', 'AttendanceController@AttendanceSystem')->name('AttendanceSystem')->middleware('auth');
Route::post('AttendanceSystemUser', 'AttendanceController@AttendanceSystemUser')->name('AttendanceSystemUser')->middleware('auth');
Route::post('submitAttendance', 'AttendanceController@submitAttendance')->name('submitAttendance')->middleware('auth');
Route::post('LoadAttendance', 'AttendanceController@LoadAttendance')->name('LoadAttendance')->middleware('auth');
Route::get('TodayAttendance', 'AttendanceController@TodayAttendance')->name('TodayAttendance')->middleware('auth');
// Route::get('AllAttendance', 'AttendanceController@AllAttendance')->name('AllAttendance')->middleware('auth');

Route::get('AttendanceCallCenter', 'AttendanceController@AttendanceCallCenter')->name('AttendanceCallCenter')->middleware('auth');
// 
Route::get('non-verified-export', 'ExportController@nonverifiedexport')->name('nonverifiedexport')->middleware('role:Admin|superAdmin');
Route::get('dnclogexport', 'ExportController@dnclogexport')->name('dnclogexport')->middleware('auth');

// 

Route::post('view-lead-mobile-api', 'ChatController@view_lead')->name('view_lead_mobile_api')->middleware('auth');
// Route::get('dnclogexport', 'ExportController@dnclogexport')->name('dnclogexport')->middleware('auth');

// 
Route::get('callcenter-monthly-activation-{id}', 'ExportController@callcenter_monthly_activation_export')->name('callcenter.monthly.activation.report')->middleware('role:Admin|superAdmin');
Route::get('callcenter-previous-monthly-activation-{id}', 'ExportController@callcenter_previous_monthly_activation_export')->name('callcenter.previous.monthly.activation.report')->middleware('role:Admin|superAdmin');

// 
Route::get('previousnonprepaidact/{id}', 'ExportController@previousnonprepaidact')->name('previousnonprepaidact')->middleware('role:Admin|superAdmin');
// 
//
Route::get('/move-lead', 'AjaxController@moveleadform')->name('moveleadform')->middleware('auth');
Route::post('/move-lead-post', 'AjaxController@moveleadpost')->name('moveleadpost')->middleware('auth');
    //
// 
Route::get('previous-all-lead-{id}', 'ExportController@callcenter_all_report')->name('callcenter.previous.all.report')->middleware('role:Admin|superAdmin');
Route::get('CallCenterReport', 'ReportController@CallCenterReport')->name('CallCenterReport')->middleware('role:Admin|superAdmin');
Route::get('Prepaid', 'ReportController@Prepaid')->name('Prepaid')->middleware('auth');
Route::post('prepaid-ajax', 'ReportController@prepaid_ajax')->name('prepaid.ajax')->middleware('auth');
Route::post('isprepaid', 'ReportController@isprepaid')->name('is.prepaid')->middleware('auth');
Route::get('TotalPrepaid', 'ReportController@total_prepaid')->name('total_prepaid')->middleware('auth');
Route::get('TotalInvalid', 'ReportController@total_invalid')->name('total_invalid')->middleware('auth');
Route::get('all-prepaid', 'ReportController@all_prepaid')->name('all_prepaid')->middleware('auth');
Route::get('callcenter_prepaid/{slug}', 'ReportController@callcenter_prepaid')->name('callcenter_prepaid')->middleware('role:Admin|superAdmin');
Route::post('our-prepaid-ajax', 'ReportController@our_prepaid_ajax')->name('our.prepaid.ajax')->middleware('auth');
Route::get('CategoryWiseCount', 'ReportController@CategoryWiseCount')->name('CategoryWiseCount')->middleware('role:Admin|superAdmin');


Route::get('all-call-center-report', 'ReportController@all_call_center_report')->name('all_call_center_report')->middleware('auth');

// Route::get('email-test', function(){

//     // $details['email'] = 'your_email@gmail.com';
//     $details = [
//         'lead_no' => 'test',
//         'customer_name' =>  'test',
//         'customer_number' => 'test',
//         'selected_number' => 'test',
//         'sim_type' => 'test',
//         // 'Plan' => $number,
//         // 'AlternativeNumber' => $alternativeNumber,
//     ];

//     \Mail::to('salmanahmed334@gmail.com')
//     // ->cc($moreUsers)
//     // ->bcc($evenMoreUsers)
//     ->queue(new App\Mail\ActivationMail($details));
//     // dispatch(new App\Jobs\SendActivationJob($details));

//     dd('done');
// });
//
Auth::routes();
// Route::group(['prefix' => 'admin', 'middleware' => ['CheckCountry']], function () {

Route::prefix('admin')->group(function () {
    // Route::get('test', function () {
    //     // event(new App\Events\MyEvent('Someone'));
    //     event(new MyEvent('hello world'));
    Route::get('add-lead-wifi', 'HomeController@addleadwifi')->name('addleadwifi')->middleware('auth');
    Route::post('/lead-store-wifi', 'HomeController@leadstorewifi')->name('leadstorewifi')->middleware('auth');
    //     return "Event has been sent!";
    // });
    // 
    Route::get('category-report', 'ReportController@CategoryReport')->name('CategoryReport')->middleware('role:Admin|superAdmin');
    Route::post('DownloadCategoryReport', 'ReportController@DownloadCategoryReport')->name('download.category.report')->middleware('role:Admin|superAdmin');
    Route::get('DownloadCustomReport/start_date/{start_date}/end_date/{end_date}/channel/{channel_partner}/category/{number_category}', 'ExportController@DownloadCustomReport')->name('download.custom.report')->middleware('role:Admin|superAdmin');
    // 
    Route::get('MyWhatsApp/{session_id}', 'ImportExcelController@MyWhatsApp')->name('MyWhatsApp')->middleware('auth');

    // 
    Route::get('add-candidate-data', 'CandidateController@add_candidate_data')->name('add.candidate.data')->middleware('auth');
    Route::get('second-candidate-data/{id}', 'CandidateController@second_candidate_data')->name('second.candidate.data')->middleware('auth');
    Route::get('add-slot-data', 'CandidateController@add_slot_data')->name('add.slot.data')->middleware('auth');;
    Route::post('slot-store', 'CandidateController@slot_store')->name('slot.store')->middleware('auth');;
    Route::post('candidate-store', 'CandidateController@candidate_store')->name('candidate.store')->middleware('auth');;
    Route::post('candidate-update', 'CandidateController@candidate_update')->name('candidate.update')->middleware('auth');;
    Route::post('candidate-second-update', 'CandidateController@candidate_second_update')->name('candidate.second.update')->middleware('auth');;
    Route::post('candidate-reject', 'CandidateController@candidate_reject')->name('candidate.reject')->middleware('auth');;
    Route::post('slot-time', 'CandidateController@slotdate')->name('slot.time')->middleware('auth');;
    Route::post('check-manager', 'CandidateController@checkmanager')->name('check.manager')->middleware('auth');;
    Route::get('my-today-appointment', 'CandidateController@my_today_appointment')->name('my.today.appointment')->middleware('auth');
    Route::get('no-show-appointment', 'CandidateController@no_show_appointment')->name('no.show.appointment')->middleware('auth');
    Route::get('accepted-appointment-{location}', 'CandidateController@accepted_appointment_location')->name('accepted.appointment.locations')->middleware('auth');
    Route::get('rejected-appointment-{location}', 'CandidateController@rejected_appointment_location')->name('rejected.appointment.location')->middleware('auth');
    Route::get('accepted-appointment/{location}', 'CandidateController@accepted_appointment_manager')->name('accepted.appointment.manager')->middleware('auth');
    Route::get('rejected-appointment/{location}', 'CandidateController@rejected_appointment_manager')->name('rejected.appointment.manager')->middleware('auth');
    Route::get('no-show-appointment-{location}', 'CandidateController@no_show_appointment_location')->name('no.show.appointment.location')->middleware('auth');
    Route::get('all-appointment', 'CandidateController@all_appointment')->name('all.appointment')->middleware('auth');
    Route::get('accepted-appointment', 'CandidateController@accepted_appointment')->name('accepted.appointment')->middleware('auth');
    Route::get('rejected-appointment', 'CandidateController@rejected_appointment')->name('rejected.appointment')->middleware('auth');
    Route::get('joined-candidate', 'CandidateController@joined_candidate')->name('joined.candidate')->middleware('auth');
    Route::get('noshow-candidate', 'CandidateController@noshow_candidate')->name('noshow.candidate')->middleware('auth');
    Route::get('candidate_data/{id}', 'CandidateController@candidate_data')->name('candidate.data')->middleware('auth');
    Route::get('generate-userid/{id}', 'CandidateController@generate_userid')->name('generate.id')->middleware('auth');
    Route::post('create_id', 'CandidateController@create_id')->name('create.id')->middleware('auth');
    Route::get('generated-userid/{id}', 'CandidateController@generated_userid')->name('generated.id')->middleware('auth');
    Route::get('second-feedback-appointment', 'CandidateController@second_feedback')->name('second-feedback-appointment')->middleware('auth');


    //
    Route::get('MNPINP', 'AjaxController@MNPINP')->name('MNPINP')->middleware('role:Admin|superAdmin');
    Route::get('attendmnp/{id}', 'AjaxController@attendmnp')->name('attendmnp')->middleware('role:Admin|superAdmin');
    //
    Route::resource('/unread-notification', 'RemarksNotificationController')->middleware('auth');
    Route::get('/time-out', 'CoordinaterController@timeout')->name('time.out')->middleware('auth');
    Route::get('/emirate-time-out', 'CoordinaterController@emiratetimeout')->name('emirate.time.out')->middleware('auth');
    Route::get('/appointment', 'CoordinaterController@appointment_lead')->name('appointment')->middleware('auth');
    Route::get('/emirate-appointment', 'CoordinaterController@emirate_appointment_lead')->name('emirate.appointment')->middleware('auth');
    Route::get('/my-time-out', 'CoordinaterController@mytimeout')->name('my.time.out')->middleware('auth');
    Route::get('/my-appointment', 'CoordinaterController@my_appointment')->name('my.appointment')->middleware('auth');
    Route::post('/update-time', 'AgentController@update_time')->name('update.time')->middleware('auth');
    Route::post('/update-user-choice', 'AgentController@update_user_choice')->name('update.user.time')->middleware('auth');
    //
    Route::get('/downloadZip', 'ZipController@download')->name('download')->middleware('auth');

    Route::get('/manage-cordination/{id}', 'AjaxController@manage_cordinator')->name('manage-cordination')->middleware('auth');
    Route::get('/emirate-proceed/{id}', 'CoordinaterController@emirate')->name('emirate-cordination')->middleware('auth');
    Route::get('/emirate-proceed-assigned/{id}', 'CoordinaterController@emirate_assigned')->name('emirate-cordination-proceed')->middleware('auth');
    Route::get('/agent-proceed-assigned/{id}', 'CoordinaterController@agent_assigned')->name('agent_assigned')->middleware('auth');
    Route::get('/carry-forward', 'AgentController@carry_forward')->name('admin.carry-forward')->middleware('auth');
    Route::get('/my-carry-forward', 'AgentController@my_carry_forward')->name('admin.my-carry-forward')->middleware('auth');
    Route::get('/all-lead', 'MainController@all_lead')->name('all.lead')->middleware('auth');
    Route::get('/all-lead-{call_center}', 'MainController@all_lead_call_center')->name('all.lead.call')->middleware('auth');
    Route::get('/checknumber', 'MainController@checknumber')->name('checknumber.status')->middleware('auth');
    Route::get('/checkleadnumber', 'MainController@checkleadnumber')->name('checkleadnumber.status')->middleware('auth');
    
    Route::get('/NumberMailCategory', 'MainController@NumberMailCategory')->name('NumberMailCategory')->middleware('auth');
    Route::post('/NumberMail', 'AjaxController@NumberMail')->name('NumberMail')->middleware('auth');

    Route::get('/checkreservednumber', 'MainController@checkreservednumber')->name('checkreservednumber.status')->middleware('auth');
    Route::get('/checkcustomernumber', 'MainController@checkcustomernumber')->name('checkcustomernumber.status')->middleware('auth');
    Route::get('/checknumberoriginal', 'MainController@checknumberoriginal')->name('checknumberoriginal.status')->middleware('auth');
    Route::get('/checknumberoriginalreserved', 'MainController@checknumberoriginalreserved')->name('checknumberoriginalreserved.status')->middleware('auth');

    Route::get('/add-location-lead/{id}', 'CoordinaterController@CordinationLead')->name('verification.add-location-lead')->middleware('auth');
    Route::get('/add-re-process/{id}', 'CoordinaterController@reprocess_CordinationLead')->name('cord.add-location-lead')->middleware('auth');
    //
    Route::get('/add-p2p-lead', 'MainController@p2p_form')->name('new.p2p.lead')->middleware('auth');
    Route::get('/p2p-lead/{id}', 'MainController@p2p_status')->name('p2p.status')->middleware('auth');
    Route::post('/p2p-submit', 'MainController@p2p_submit')->name('p2p.submit')->middleware('auth');
    Route::get('/p2p-assigned', 'CoordinaterController@p2p_proceed')->name('p2p.proceed')->middleware('auth');
    // MNP Section
    Route::get('/mnp-lead/{id}', 'MainController@mnp_status')->name('mnp.status')->middleware('auth');
    // MNP Section End
    // 
    Route::get('/dnc-checker', 'ImportExcelController@dnc_checker')->name('dnc_checker')->middleware('auth');
    Route::post('/dnc-checker-list', 'ImportExcelController@dnc_checker_list')->name('dnc.checker')->middleware('auth');
    // 
    Route::get('/dnc-checker-new', 'ImportExcelController@dnc_checker_new')->name('dnc_checker_new')->middleware('auth');
    Route::post('/dnc-checker-list-new', 'ImportExcelController@dnc_checker_list_new')->name('dnc.checker.new.list')->middleware('auth');
    // 
    //
    Route::get('/dnc-checker-personal', 'ImportExcelController@dnc_checker_personal')->name('dnc_checker_personal')->middleware('auth');
    Route::post('/dnc-checker-personal-new', 'ImportExcelController@dnc_checker_personal_new')->name('dnc.checker.personal.list')->middleware('auth');
    //
    //
    Route::get('/send-whatsapp-bulk', 'ImportExcelController@send_whatsapp_bulk')->name('send_whatsapp_bulk')->middleware('auth');
    Route::post('/send-whatsapp-bulk-test', 'ImportExcelController@send_whatsapp_bulk_test')->name('send_whatsapp_bulk_test')->middleware('auth');
    //
    //
    Route::get('/dnc-add-number', 'ImportExcelController@dnc_add_number')->name('dnc_add_number')->middleware('auth');
    Route::post('/dnc-add-number-new', 'ImportExcelController@dnc_add_number_new')->name('dnc.add.number.new')->middleware('auth');
    //
    Route::get('/add-dnc-number-agent', 'ImportExcelController@dnc_add_number_agent')->name('add.dnc.number.agent')->middleware('auth');
    Route::post('/add-dnc', 'NumberController@submit_dnc_number')->name('submit_dnc_number')->middleware('auth');
    // 
        Route::get('/dnc-checker-rehan', 'ImportExcelController@dnc_checker_rehan')->name('dnc_checker_rehan')->middleware('auth');
    Route::post('/dnc-checker-list-rehan', 'ImportExcelController@dnc_checker_list_rehan')->name('dnc.checker.new.rehan')->middleware('auth');
    // 
    Route::get('/import-dnc', 'ImportExcelController@dnc_upload')->name('import_dnc')->middleware('auth');
    Route::post('/dnc-excel', 'ImportExcelController@dnc_impoort')->name('dnc.excel')->middleware('auth');
    // 
    Route::post('/update_passcode_excel', 'ImportExcelController@update_passcode_excel')->name('update_passcode.excel')->middleware('auth');
    Route::get('/update-passcode', 'ImportExcelController@update_passcode')->name('update_passcode')->middleware('role:Admin|superAdmin');
        // 
    Route::get('/import_excel', 'ImportExcelController@index')->name('import_excel')->middleware('role:Admin|superAdmin');
    Route::get('/update_excel', 'ImportExcelController@update_excel')->name('update_excel')->middleware('role:Admin|superAdmin');
    Route::get('/import_elife', 'ImportExcelController@index_elife')->name('import_elife')->middleware('auth');
    Route::post('/import_excel/import', 'ImportExcelController@import')->name('import.excel')->middleware('auth');
    Route::post('/update_number', 'ImportExcelController@update_number')->name('update.excel')->middleware('auth');
    Route::post('/import_elife/import', 'ImportExcelController@import_elife')->name('import.excel.elife')->middleware('auth');
    // Route::get('/import_area', 'ImportExcelController@index')->name('import_excel')->middleware('role:Admin|superAdmin');
    // Route::post('/import_area/import', 'ImportExcelController@import_aea')->name('import.excel.elife')->middleware('auth');
    //
    Route::get('/import_excel_region', 'ImportExcelController@index_region')->name('import_excel_region')->middleware('role:Admin|superAdmin');
    Route::post('/import_excel_region_import', 'ImportExcelController@import_region')->name('import.region.excel')->middleware('auth');
    Route::get('/import_area', 'ImportExcelController@index_area')->name('import.area')->middleware('role:Admin|superAdmin');
    Route::post('/import_area_post', 'ImportExcelController@import_area')->name('import.area.excel')->middleware('auth');
    Route::post('/lead-store-new', 'AjaxController@leadstorenew')->name('leadstorenew')->middleware('auth');
    Route::post('/lead-store-mnp', 'AjaxController@leadstoremnp')->name('leadstoremnp')->middleware('auth');
    //
    Route::post('/bulk_importer/assigner', 'NumberAssigner@assigner')->name('bulk.assigner')->middleware('auth');
    Route::post('/bulk_importer/assigner-user', 'NumberAssigner@assigner_user')->name('bulk.assigner.user')->middleware('auth');
    Route::post('/bulk_importer/assigner-multiple', 'NumberAssigner@assigner_multiple')->name('bulk.assigner.multiple')->middleware('auth');

    Route::get('/myactive', 'ActivationController@myactive')->name('myactive')->middleware('auth');
    Route::get('/total-active-lead', 'ActivationController@totalactivelead')->name('total-active-lead')->middleware('auth');
    Route::get('/total-active-lead-daily', 'ActivationController@totalactiveleaddaily')->name('total-active-lead.daily')->middleware('auth');
    Route::get('/emirate-total-active-lead-daily', 'ActivationController@emiratetotalactiveleaddaily')->name('emirate.total-active-lead.daily')->middleware('auth');
    Route::get('/daily-collection', 'ActivationController@daily_collection')->name('daily-collection')->middleware('auth');
    Route::get('/total-reject-lead', 'ActivationController@totalrejectlead')->name('total-reject-lead')->middleware('auth');
    Route::get('/total-reject-lead-daily', 'ActivationController@totalrejectleaddaily')->name('total-reject-lead-daily')->middleware('auth');
    Route::get('/emirate-total-reject-lead-daily', 'ActivationController@emiratetotalrejectleaddaily')->name('emirate.total-reject-lead-daily')->middleware('auth');
    Route::get('/total-follow-lead', 'ActivationController@totalfollowlead')->name('total-follow-lead')->middleware('auth');
    Route::get('/total-reverify-lead', 'ActivationController@totalreverifylead')->name('total-reverify-lead')->middleware('auth');
    Route::get('/total-reverify-lead-daily', 'ActivationController@totalreverifyleaddaily')->name('total-reverify-lead-daily')->middleware('auth');
    Route::get('/emirate-total-reverify-lead-daily', 'ActivationController@emiratetotalreverifyleaddaily')->name('emirate.total-reverify-lead-daily')->middleware('auth');
    Route::get('/total-refollowup-lead', 'ActivationController@totalrefollowup')->name('total-refollowup-lead')->middleware('auth');
    Route::get('/proceed-lead', 'CoordinaterController@agent_proceed_lead')->name('activation.proceed')->middleware('auth');
    Route::get('/all-proceed-lead-daily', 'CoordinaterController@all_agent_proceed_lead_daily')->name('all.activation.proceed.daily')->middleware('auth');
    Route::get('/proceed-lead-daily', 'CoordinaterController@agent_proceed_lead_daily')->name('activation.proceed.daily')->middleware('auth');
    Route::get('/emirate-proceed-lead-daily', 'CoordinaterController@emirate_agent_proceed_lead_daily')->name('emirate.activation.proceed.daily')->middleware('auth');
    Route::get('/later-lead-today', 'CoordinaterController@later_lead_today')->name('laterlead.today')->middleware('auth');
    Route::get('/emirate-later-lead-today', 'CoordinaterController@emirate_later_lead_today')->name('emirate.laterlead.today')->middleware('auth');
    Route::get('/later-lead-all', 'CoordinaterController@later_lead_all')->name('laterlead.all')->middleware('auth');
    Route::get('/our-proceed-lead-daily/{call_center_id}', 'CoordinaterController@our_agent_proceed_lead_daily')->name('our.activation.proceed.daily')->middleware('auth');
    Route::get('region/{slug}', 'NumberController@region_lead')->name('region.lead')->middleware('auth');
    Route::get('/paid-lead', 'ActivationController@paidlead')->name('paid.proceed')->middleware('auth');
    Route::get('/paid-lead-daily', 'ActivationController@paidleaddaily')->name('paid.proceed.daily')->middleware('auth');
    Route::get('/free-lead', 'ActivationController@freelead')->name('free.proceed')->middleware('auth');
    Route::get('/free-lead-daily', 'ActivationController@freeleaddaily')->name('free.proceed.daily')->middleware('auth');
    Route::get('/my-lead', 'CoordinaterController@myproceedlead')->name('my.proceed')->middleware('auth');
    Route::get('/my-lead-daily', 'CoordinaterController@myproceedleaddaily')->name('my.proceed.daily')->middleware('auth');
    Route::get('/emirate-my-lead-daily', 'CoordinaterController@emiratemyproceedleaddaily')->name('emirate.my.proceed.daily')->middleware('auth');
    Route::get('/my-lead-yesterday', 'CoordinaterController@myproceedleadyesterday')->name('my.proceed.yesterday')->middleware('auth');
    Route::get('/emirate-my-lead-yesterday', 'CoordinaterController@emiratemyproceedleadyesterday')->name('emirate.my.proceed.yesterday')->middleware('auth');
    Route::get('/transfer-today', 'CoordinaterController@myproceedleadyesterdaytotoday')->name('my.proceed.yesterday.today')->middleware('auth');
    Route::get('/our-lead-daily/{call_center_id}', 'CoordinaterController@ourproceedleaddaily')->name('our.proceed.daily')->middleware('auth');
    Route::get('/follow-up-combine', 'CoordinaterController@followupcombine')->name('followup.combine')->middleware('auth');
    Route::get('/follow-up-combine-daily', 'CoordinaterController@followupcombinedaily')->name('followup.combine.today')->middleware('auth');
    Route::get('/emirate-follow-up-combine-daily', 'CoordinaterController@emiratefollowupcombinedaily')->name('emirate.followup.combine.today')->middleware('auth');
    Route::get('/mylead', 'AgentController@agent_lead')->name('admin.mylead')->middleware('auth');
    Route::get('/ourlead', 'AgentController@ourlead')->name('admin.ourlead')->middleware('auth');
    Route::post('/mylead-ajax', 'AgentController@agent_lead_ajax')->name('mylead.ajax')->middleware('auth');
    Route::post('/ourlead-ajax', 'AgentController@our_lead_ajax')->name('ourlead.ajax')->middleware('auth');
    Route::get('/mysharedlead', 'AgentController@mysharedlead')->name('admin.mysharedlead')->middleware('auth');
    Route::get('/CallCenterShared', 'AgentController@CallCenterShared')->name('admin.CallCenterShared')->middleware('auth');
    Route::get('/AgentSharedLead/{userid}', 'AgentController@AgentSharedLead')->name('admin.AgentSharedLead')->middleware('auth');
    Route::get('/my-lead-followup', 'AgentController@agent_refollowup')->name('admin.refollowup')->middleware('auth');
    Route::get('/my-non-verified', 'AgentController@agent_non_verified')->name('admin.non-verify')->middleware('auth');
    Route::get('/monthly-non-verified', 'AgentController@monthly_non_verified')->name('admin.monthly-non-verify')->middleware('auth');
    Route::get('/daily-non-verified', 'AgentController@daily_non_verified')->name('admin.daily-non-verify')->middleware('auth');
    Route::get('/daily-pending', 'AgentController@daily_pending')->name('admin.daily.pending')->middleware('auth');
    Route::get('/daily-followup', 'AgentController@daily_followup')->name('admin.daily.followup')->middleware('auth');
    Route::get('/monthly-followup', 'AgentController@monthly_followup')->name('admin.monthly.followup')->middleware('auth');
    Route::get('/my-group-followup', 'AgentController@group_refollowup')->name('group.refollowup')->middleware('auth');
    Route::post('/reprocess-group', 'AgentController@reprocessgroup')->name('reprocess.group');
    Route::post('/checkleadnonverified', 'AgentController@CheckLeadNonVerify')->name('checklead.nonverified');
    // Route::get('/target-assigner', 'TargetAssignerManagerController@myactive')->name('myactive')->middleware('auth');
    Route::post('re-enable', 'AjaxController@re_enable')->name('re-enable')->middleware('auth');
    Route::post('disabled', 'AjaxController@disabled')->name('disabled')->middleware('auth');
    Route::post('LaterLead', 'AjaxController@LaterLead')->name('LaterLead')->middleware('auth');
    Route::get('RecordingLead', 'AjaxController@RecordingLead')->name('recording.lead')->middleware('auth');
    Route::get('InitialLeads', 'AjaxController@InitialLeads')->name('InitialLeads.lead')->middleware('auth');
    Route::post('ShowVerificationAgent', 'AjaxController@ShowVerificationAgent')->name('ShowVerificationAgent')->middleware('auth');
    Route::post('ChangeAgent', 'AjaxController@ChangeAgent')->name('change.agent')->middleware('auth');
    //
    Route::get('/NumberTypeList', 'NumberController@NumberTypeList')->name('admin.NumberTypeList')->middleware('auth');
    Route::post('/ReservedNumberList', 'NumberController@ReservedNumberList')->name('admin.ReservedNumberList')->middleware('auth');
    Route::post('/LoadAdminData', 'AjaxController@LoadAdminData')->name('admin.LoadAdminData')->middleware('auth');
    Route::post('/LoadMainCordData', 'AjaxController@LoadMainCordData')->name('admin.LoadMainCordData')->middleware('auth');

    // Route::get('NumberTypeDtl/{id}/status/{status}', [
    //     'as' => 'NumberTypeDtl', 'uses' => 'NumberController@NumberTypeDtl'
    // ]);
    Route::get('NumberDtlID/{id}/channel/{channel}', [
        'as' => 'showCampaignProductDetails2', 'uses' => 'NumberController@NumberTypeDtl'
    ]);
    //
    // Route::get('fireEvent', function () {
    //     event(new MyEvent('Hello World'));
    // });
    Route::get('/', 'HomeController@index')->name('admin.dashboard')->middleware('auth');

    // Route::get('/', 'HomeController@index')->name('admin.dashboard');
    Route::get('/material', 'HomeController@index_material')->name('training.material')->middleware('CheckAuth');
    Route::get('/whatsapp-training', 'HomeController@whatsapp_training')->name('whatsapp.training')->middleware('auth');
    Route::get('/myactivation/{slug}', 'ReportController@myactivation')->name('myactivation')->middleware('auth');
    Route::get('/material-code', 'HomeController@material_code')->name('material.code')->middleware('auth');
    Route::post('/material-code-request', 'HomeController@material_code_request')->name('request.code.material')->middleware('auth');
    Route::post('/material-code-accept', 'HomeController@material_code_accept')->name('material.code.accept')->middleware('auth');
    Route::get('guest-{slug}', 'HomeController@guest_type')->name('guest-number-select')->middleware('auth');
    Route::get('/days', 'HomeController@days_test')->middleware('auth');
    Route::get('/feedback-data', 'HomeController@feedback')->name('admin.feedback')->middleware('auth');
    Route::get('/login', 'Auth\LoginController@showLoginForm')->name('admin.login');
    // Route::get('/number-login', 'Auth\LoginController@showLoginForm')->name('admin.login');
    Route::post('/login', 'Auth\LoginController@login')->name('admin.login.submit');
    // Route::get('/register', 'Auth\AdminRegisterController@showRegisterForm')->name('admin.register');
    // Route::post('/register', 'Auth\AdminRegisterController@register')->name('admin.register.submit');
    Route::resource('/elife-log', 'ElifeLogController')->middleware('permission:manage elife|role:NumberAdmin');
    Route::resource('/lead', 'LeadSaleController')->middleware('permission:manage sale|role:NumberAdmin');
    Route::resource('/plan', 'PlanController')->middleware('role:Admin|Superadmin');
    Route::resource('/elife', 'ElifePlanController')->middleware('role:Admin|Superadmin');
    Route::resource('/emirate', 'EmirateController')->middleware('role:Admin|Superadmin');
    Route::resource('/partner', 'ChannelPartnerController')->middleware('role:Admin|Superadmin|sale|NumberAdmin|TTF-SALE');
    Route::resource('/elife-addon', 'AddonController')->middleware('role:Admin|Superadmin');
    Route::resource('/verification', 'VerificationFormController')->middleware('auth');
    Route::get('pending_lead-{slug}', 'AjaxController@pending_lead')->name('pending.lead')->middleware('auth');
    Route::resource('/multi-sale', 'MultiSaleController')->middleware('auth');
    Route::resource('/lead-location', 'LeadLocationController');
    Route::resource('/call-center', 'CallCenterController')->middleware('role:Admin|Superadmin');
    Route::resource('/IT-product', 'ItProductsController')->middleware('role:Admin|Superadmin');
    Route::resource('/imei', 'ImeiListController')->middleware('role:Admin|Superadmin');
    Route::resource('/IT-Plan', 'ItproductplansController')->middleware('role:Admin|Superadmin');
    Route::resource('/Manager-target', 'TargetAssignerManagerController')->middleware('role:Admin|Superadmin');
    Route::resource('/user-target', 'TargetAssignerUserController')->middleware('auth');
    Route::resource('/old-data', 'OldDataController')->middleware('auth');
    Route::resource('/request-agent', 'RequestAgentController')->middleware('auth');
    Route::get('pending-agent', 'AgentController@pendinguser')->name('pending.agent');
    // ->middleware('role:Admin|Superadmin');
    Route::post('Approved-User', 'AgentController@approved')->name('approved.user')->middleware('role:Admin|Superadmin');
    Route::post('SaveChanges', 'AjaxController@SaveChanges')->name('SaveChanges')->middleware('auth');
    Route::get('/user', 'UserController@index')->name('user-index')->middleware('role:Admin|Superadmin');
    Route::get('/active-agent', 'UserController@active_agent')->name('active.agent')->middleware('auth');
    Route::get('/user/create', 'UserController@create')->name('user.create')->middleware('role:Admin|Superadmin');
    Route::post('/user', 'UserController@store')->name('admin.user.store')->middleware('role:Admin|Superadmin');
    Route::post('/users/{id}', 'UserController@update')->name('admin.user.update')->middleware('role:Admin|Superadmin');
    Route::get('/user/{id}', 'UserController@destroy')->name('user.destroy')->middleware('role:Admin|Superadmin');
    Route::get('/user-profile/{id}', 'UserController@UserProfile')->name('user.profile')->middleware('auth');
    Route::get('/user-edit/{id}', 'UserController@edit')->name('user.edit')->middleware('role:Admin|Superadmin');
    Route::get('/target-user', 'UserController@TargetUser')->name('target-user')->middleware('role:Admin|Superadmin');
    Route::post('/AssignUser', 'UserController@AssignUser')->name('user.assign.data')->middleware('role:Admin|Superadmin');
    Route::post('/updateusertile', 'UserController@updateusertile')->name('update.user.tile')->middleware('role:Admin|Superadmin');
    Route::get('/ChangePassword', 'UserController@ChangePassword')->name('change.password')->middleware('auth');
    Route::post('/ChangePasswordDone', 'UserController@ChangePasswordDone')->name('change.password.done')->middleware('auth');
    Route::post('/ProfileUpdateDone', 'UserController@ProfileUpdateDone')->name('profile.update.done')->middleware('auth');
    // Route::get('/MyAgentList', 'UserController@myagentlist')->name('myagentlist')->middleware('auth');
    // 
    Route::get('/user-joining-data', 'UserController@user_joining_data')->name('user_joining_data')->middleware('auth');
    Route::get('/user-selected-number', 'AjaxController@user_selected_number')->name('user_selected_number')->middleware('auth');

    //
    Route::get('/UpdateProfile', 'UserController@UpdateProfile')->name('UpdateProfile')->middleware('auth');
    Route::post('/UpdateProfileDone', 'UserController@UpdateProfileDone')->name('UpdateProfileDone')->middleware('auth');
    // 
    Route::get('/MyAgentList', 'UserController@myagentlist')->name('myagentlist')->middleware('auth');
    Route::get('/PermanentBlock/{id}', 'UserController@PermanentBlock')->name('permanent.block')->middleware('auth');
    Route::get('/TemporaryBlock/{id}', 'UserController@TemporaryBlock')->name('temporary.block')->middleware('auth');

    Route::get('/leadtype/{id}', 'HomeController@AllCordinationPending')->name('all.pending')->middleware('auth');
    // Route::get('/leadtype/{id}', 'HomeController@AllCordinationPending')->name('all.reprocess');
    Route::get('/view-lead/{id}', 'AgentController@viewlead')->name('view.lead')->middleware('auth');
    Route::get('/validator-lead/{id}', 'ValidatorController@view_validator_lead')->name('view.validator.lead');
    Route::get('/view-lead-active/{id}', 'AgentController@viewleadactive')->name('view.lead.active')->middleware('auth');
    Route::get('/view-active-lead/{id}', 'AgentController@active_lead')->name('view.active.lead')->middleware('auth');
    Route::get('/re-follow-edit/{id}', 'AgentController@ReFollowEdit')->name('lead.re-follow-process')->middleware('auth');
    Route::post('/re-follow-edit-post', 'AgentController@ReFollowEditpost')->name('lead.re-follow-process-edit')->middleware('auth');
    Route::post('/verified-at-location', 'AgentController@verified_at_location')->name('verified.at.location')->middleware('auth');
    Route::post('/verified-at-whatsapp', 'AgentController@verified_at_whatsapp')->name('verified.at.whatsapp')->middleware('auth');
    Route::post('/verified-today', 'AgentController@verified_today')->name('verified.today')->middleware('auth');
    Route::post('/not-answer', 'AgentController@not_answer')->name('not.answer')->middleware('auth');
    Route::post('/verified-at-active', 'AgentController@verified_active')->name('verification.active.store')->middleware('auth');
    Route::get('/verified', 'AgentController@verified')->name('admin.verify')->middleware('auth');
    Route::get('/non-verified', 'AgentController@non_verified')->name('admin.non.verified')->middleware('auth');
    Route::get('/active-non-verified', 'AgentController@active_non_verified')->name('admin.active.non.verified')->middleware('auth');
    Route::get('/active-non-verified-daily', 'AgentController@active_non_verified_daily')->name('admin.active.non.verified.daily')->middleware('auth');
    Route::get('/emirate-active-non-verified-daily', 'AgentController@emirate_active_non_verified_daily')->name('emirate.admin.active.non.verified.daily')->middleware('auth');
    Route::get('/active-non-verified-all', 'AgentController@active_non_verified_all')->name('admin.active.non.verified.all')->middleware('auth');
    Route::get('/non-verified-daily', 'AgentController@non_verified_daily')->name('admin.non.verified.daily')->middleware('auth');



    Route::get('/elife-lead', function () {
        // return "elife";
        $id = 'Elife';
        $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
            // $user =  DB::table("subjects")->select('subject_name', 'id')
            ->LeftJoin(
                'timing_durations',
                'timing_durations.lead_no',
                '=',
                'lead_sales.id'
            )
            ->Join(
                'status_codes',
                'status_codes.status_code',
                '=',
                'lead_sales.status'
            )
            ->where('status_codes.status_name', 'pending')
            ->where('lead_sales.sim_type', 'elife')
            ->get();
        // $operation = lead_sale::wherestatus('1.01')->get();
        return view('dashboard.view-all-lead', compact('operation', 'id'));
    })->name('elife.lead');

    // REPORTING
    Route::get('elife-reporting', function () {
        $id = 'Elife';
        // return auth()->user()->role;
        if (auth()->user()->role == 'Manager') {
            $status = status_code::all();
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->Join(
                    'users',
                    'users.id',
                    '=',
                    'lead_sales.saler_id'
                )
                ->where('users.agent_code', auth()->user()->agent_code)
                ->where('lead_sales.lead_type', $id)
                ->get();
            return view('dashboard.view-reporting', compact('operation', 'id', 'status'));
        } else if (auth()->user()->role == 'Admin' || auth()->user()->role == 'SuperAdmin') {
            $status = status_code::all();
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->Join(
                    'users',
                    'users.id',
                    '=',
                    'lead_sales.saler_id'
                )
                // ->where('users.agent_code', auth()->user()->agent_code)
                ->where('lead_sales.lead_type', $id)
                ->get();
            return view('dashboard.view-reporting', compact('operation', 'id', 'status'));
        }
    })->name('elife.reporting');
    Route::get('postpaid-reporting', function () {
        // $id = 'postpaid';
        // return auth()->user()->role;
        // $status = status_code::all();

        // $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
        //     // $user =  DB::table("subjects")->select('subject_name', 'id')
        //     ->LeftJoin(
        //         'timing_durations',
        //         'timing_durations.lead_no',
        //         '=',
        //         'lead_sales.id'
        //     )
        //     ->Join(
        //         'status_codes',
        //         'status_codes.status_code',
        //         '=',
        //         'lead_sales.status'
        //     )
        //     ->where('lead_sales.lead_type', $id)
        //     ->get();
        // return view('dashboard.view-reporting', compact('operation','id','status'));
        $id = 'Postpaid';
        if (auth()->user()->role == 'Manager') {
            $status = status_code::all();
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->Join(
                    'users',
                    'users.id',
                    '=',
                    'lead_sales.saler_id'
                )
                ->where('users.agent_code', auth()->user()->agent_code)
                ->where('lead_sales.lead_type', $id)
                ->get();
            return view('dashboard.view-reporting', compact('operation', 'id', 'status'));
        } else if (auth()->user()->role == 'Admin' || auth()->user()->role == 'SuperAdmin') {
            $status = status_code::all();
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->Join(
                    'users',
                    'users.id',
                    '=',
                    'lead_sales.saler_id'
                )
                // ->where('users.agent_code', auth()->user()->agent_code)
                ->where('lead_sales.lead_type', $id)
                ->get();
            return view('dashboard.view-reporting', compact('operation', 'id', 'status'));
        }
    })->name('postpaid.reporting');
    Route::get('ITProducts-reporting', function () {
        // $id = 'ITProducts';
        // $status = status_code::all();

        // $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
        //     // $user =  DB::table("subjects")->select('subject_name', 'id')
        //     ->LeftJoin(
        //         'timing_durations',
        //         'timing_durations.lead_no',
        //         '=',
        //         'lead_sales.id'
        //     )
        //     ->Join(
        //         'status_codes',
        //         'status_codes.status_code',
        //         '=',
        //         'lead_sales.status'
        //     )
        //     ->where('lead_sales.lead_type', $id)
        //     ->get();
        // return view('dashboard.view-reporting', compact('operation','id','status'));
        $id = 'ITProducts';
        if (auth()->user()->role == 'Manager') {
            $status = status_code::all();
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->Join(
                    'users',
                    'users.id',
                    '=',
                    'lead_sales.saler_id'
                )
                ->where('users.agent_code', auth()->user()->agent_code)
                ->where('lead_sales.lead_type', $id)
                ->get();
            return view('dashboard.view-reporting', compact('operation', 'id', 'status'));
        } else if (auth()->user()->role == 'Admin' || auth()->user()->role == 'SuperAdmin') {
            $status = status_code::all();
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->Join(
                    'users',
                    'users.id',
                    '=',
                    'lead_sales.saler_id'
                )
                // ->where('users.agent_code', auth()->user()->agent_code)
                ->where('lead_sales.lead_type', $id)
                ->get();
            return view('dashboard.view-reporting', compact('operation', 'id', 'status'));
        }
    })->name('it.reporting');
    Route::get('leads/{id}', function ($id) {
        // return $id;
        // return auth()->user()->role;
        if (auth()->user()->role == 'Manager' || auth()->user()->role == 'NumberSuperAdmin') {
            $operation = lead_sale::select("timing_durations.lead_generate_time", "timing_durations.lead_accept_time", "timing_durations.lead_proceed_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->Join(
                    'users',
                    'users.id',
                    '=',
                    'lead_sales.saler_id'
                )
                ->where('status_codes.status_name', $id)
                ->where('users.agent_code', auth()->user()->agent_code)
                ->get();
            // $operation = lead_sale::wherestatus('1.01')->get();
            return view('dashboard.view-all-lead', compact('operation', 'id'));
        } else if (auth()->user()->role == 'NumberAdmin' || auth()->user()->role == 'Sale' || auth()->user()->role == 'sale' || auth()->user()->role == 'TTF-SALE') {
            // return auth()->user()->id;
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->where('status_codes.status_name', $id)
                // ->where('lead_sales.lead_type', 'postpaid')
                ->where('lead_sales.saler_id', auth()->user()->id)
                ->get();
            // $operation = lead_sale::wherestatus('1.01')->get();
            return view('dashboard.view-all-lead', compact('operation', 'id'));
            // return "boom";
        } else if (auth()->user()->role != 'sale') {
            $operation = lead_sale::select("timing_durations.lead_generate_time", "timing_durations.lead_accept_time", "timing_durations.lead_proceed_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->where('status_codes.status_name', $id)
                ->get();
            // $operation = lead_sale::wherestatus('1.01')->get();
            return view('dashboard.view-all-lead', compact('operation', 'id'));
        }
    })->name('leads.status');
    // Route::GET('/lead-pending', 'LeadLocationController@pending')->name('lead.pending');
    // Route::post('/verification/{$id}', array('uses' => 'ProjectController@createProject'));
    Route::get('pending', function () {
        //
        if (auth()->user()->role == 'Manager' || auth()->user()->role == 'Admin' || auth()->user()->role == 'SuperAdmin') {
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->where('lead_sales.status', '1.06')
                // ->where('lead_sales.pre_check_agent', auth()->user()->id)
                ->get();
            // $operation = lead_sale::wherestatus('1.01')->get();
            return view('dashboard.view-verification-pending', compact('operation'));
        } else {
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->where('lead_sales.status', '1.06')
                ->where('lead_sales.pre_check_agent', auth()->user()->id)
                ->get();
            // $operation = lead_sale::wherestatus('1.01')->get();
            return view('dashboard.view-verification-pending', compact('operation'));
        }
    })->name('admin.later')->middleware('auth');


    Route::get('mygrouplead/{id}', function ($id) {

        $myrole = auth()->user()->multi_agentcode;

        //
        $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name", 'users.name as agent_name')
            // $user =  DB::table("subjects")->select('subject_name', 'id')
            ->LeftJoin(
                'timing_durations',
                'timing_durations.lead_no',
                '=',
                'lead_sales.id'
            )
            ->Join(
                'status_codes',
                'status_codes.status_code',
                '=',
                'lead_sales.status'
            )
            ->Join(
                'users',
                'users.id',
                '=',
                'lead_sales.saler_id'
            )
            // ->where('lead_sales.status', '1.06')
            ->wherein('lead_sales.channel_type', ['TTF', 'ExpressDial'])

            // ->where('lead_sales.channel_type', $id)
            ->when($myrole, function ($query) use ($myrole) {
                if ($myrole == '1') {
                    // ->whereIn('lead_sales.emirates', explode(',', auth()->user()->emirate))
                    //
                    return $query->where('users.agent_code', auth()->user()->agent_code);
                } else {
                    return $query->whereIn('users.agent_code', explode(',', auth()->user()->multi_agentcode));
                }
                // else if($myrole == 'KHICordination'){
                //     return $query->whereIn('users.agent_code', ['CC1', 'CC4', 'CC5', 'CC7', 'CC8']);
                // }
                // else {
                //     return $query->whereIn('users.agent_code', ['CC1', 'CC4', 'CC5', 'CC7', 'CC8']);
                // }
            })
            // ->where('users.agent_code', auth()->user()->agent_code)
            ->get();
        // $operation = lead_sale::wherestatus('1.01')->get();
        return view('dashboard.manager.mygrplead', compact('operation'));
    })->name('admin.mygrouplead')->middleware('role:Manager|NumberAdmin|NumberSuperAdmin|Cordination');
    //    GROUP WISE PENDING AND OTHER LEADS
    Route::get('mygroupleads/{id}/channel/{channel}', [
        'as' => 'showCampaignProductDetails', 'uses' => 'AjaxController@ShowGroupLeads'
    ]);
    Route::get('Ourgroupleads/{id}/channel/{channel}/call_center/{call_center}', [
        'as' => 'OurshowCampaignProductDetails', 'uses' => 'AjaxController@OurShowGroupLeads'
    ]);
    Route::get('mygroupleads-daily/{id}/channel/{channel}', [
        'as' => 'showCampaignProductDetailsDaily', 'uses' => 'AjaxController@ShowGroupLeadsDaily'
    ]);
    Route::get('ourgroupleads-daily/{id}/channel/{channel}/call_center/{call_center}', [
        'as' => 'OurshowCampaignProductDetailsDaily', 'uses' => 'AjaxController@OurShowGroupLeadsDaily'
    ]);
    //
    // Route::get('number-all-cleaner/{id}', function ($id) {

    //     // $data = numberdetail::all();
    //     $data = numberdetail::select("numberdetails.*","users.name","choosen_numbers.id as cid")
    //         ->LeftJoin(
    //             'choosen_numbers',
    //             'choosen_numbers.number_id',
    //             '=',
    //             'numberdetails.id'
    //             )
    //         ->LeftJoin(
    //                 'users',
    //                 'users.id',
    //                 '=',
    //                 'choosen_numbers.user_id'
    //             )
    //         ->where('numberdetails.status','Available')
    //         ->where('numberdetails.type',$id)
    //         ->get();

    //         // ->get();
    //     return view('dashboard.view-all-number-cleaner', compact('data'));
    // })->name('number-all-cleaner')->middleware('auth');

    Route::get('NumberAllCleaner/{id}/channel/{channel}', [
        'as' => 'NumberAllCleaner', 'uses' => 'AjaxController@NumberAllCleaner'
    ])->middleware('auth');
    //

    //
    // Route::get('mygroupleads/{id}{channel}', function ($id,$channel) {
    //     //

    // })->name('admin.mygroupleads')->middleware('role:Manager|NumberAdmin|NumberSuperAdmin');
    //    GROUP WISE PENDING AND OTHER LEADS
    Route::get('reject', function () {
        //
        if (auth()->user()->role == 'Manager' || auth()->user()->role == 'Admin' || auth()->user()->role == 'SuperAdmin') {
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->where('lead_sales.status', '1.04')
                // ->where('lead_sales.pre_check_agent', auth()->user()->id)
                ->get();
            // $operation = lead_sale::wherestatus('1.01')->get();
            return view('dashboard.view-verification-reject', compact('operation'));
        } else {
            $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", "status_codes.status_name")
                // $user =  DB::table("subjects")->select('subject_name', 'id')
                ->LeftJoin(
                    'timing_durations',
                    'timing_durations.lead_no',
                    '=',
                    'lead_sales.id'
                )
                ->Join(
                    'status_codes',
                    'status_codes.status_code',
                    '=',
                    'lead_sales.status'
                )
                ->where('lead_sales.status', '1.04')
                ->where('lead_sales.pre_check_agent', auth()->user()->id)
                ->get();
            // $operation = lead_sale::wherestatus('1.01')->get();
            return view('dashboard.view-verification-reject', compact('operation'));
        }
    })->name('admin.reject');

    Route::post('verification-lead-form/{id}', function ($id) {
        return $id;
    })->name('verification.lead_form')->middleware('auth');
    // Step 2 => After Sale Creating
    Route::GET('verification-lead/{id}', function ($id) {
        // return $id;
if(auth()->user()->role == 'Verification' || auth()->user()->role == 'Admin') {


    $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*", 'lead_locations.location_url as location')
        // $user =  DB::table("subjects")->select('subject_name', 'id')
        ->LeftJoin(
            'timing_durations',
            'timing_durations.lead_no',
            '=',
            'lead_sales.id'
        )
        ->LeftJoin(
            'lead_locations',
            'lead_locations.lead_id',
            '=',
            'lead_sales.id'
        )
        ->where('lead_sales.id', $id)
        ->first();
    $remarks =
        remark::select("remarks.*")
        // ->where("remarks.user_agent_id", auth()->user()->id)
        ->where("remarks.lead_id", $id)
        ->get();
    return view('dashboard.manage-operation-lead', compact('operation', 'remarks'));
}else{
            // return "OK";
    return redirect(route('admin.login'));

            // return redirect()->back();

    // return redirect()->back();
}
    })->name('verification.lead_generate')->middleware('auth');
    
    // ->middleware('role:Verification|elif-Verification|NumberVerification');
    // Step 3 => After Verification
    Route::GET('re-verification-lead/{id}', function ($id) {
        // return $id;
        $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*")
            // $user =  DB::table("subjects")->select('subject_name', 'id')
            ->LeftJoin(
                'timing_durations',
                'timing_durations.lead_no',
                '=',
                'lead_sales.id'
            )
            ->where('lead_sales.id', $id)
            ->first();
        $remarks =
            remark::select("remarks.*")
            // ->where("remarks.user_agent_id", auth()->user()->id)
            ->where("remarks.lead_id", $id)
            ->get();
        return view('dashboard.reverification-lead', compact('operation', 'remarks'));
    })->name('re-verification.lead_generate')->middleware('role:Admin,verification');
    // Step 3 => After Verification


    // Step 3 => FORM

    // Step 4 => After Cordination
    Route::GET('pending-pre-check', function () {

        // $operation = lead_sale::whereStatus('1.01')->get();
        // $operation =
        $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*")
            // $user =  DB::table("subjects")->select('subject_name', 'id')
            ->Join(
                'timing_durations',
                'timing_durations.lead_no',
                '=',
                'lead_sales.id'
            )
            ->where('lead_sales.status', '1.01')
            ->get();
        return view('dashboard.manage-precheck-lead', compact('operation'));
    })->name('verification.manage-pre-check')->middleware('auth');
    // Step 4 => FORM
    Route::GET('pre-check-form/{id}', function ($id) {
        // return $id;
        $operation = lead_sale::select("timing_durations.lead_generate_time", "lead_sales.*")
            // $user =  DB::table("subjects")->select('subject_name', 'id')
            ->Join(
                'timing_durations',
                'timing_durations.lead_no',
                '=',
                'lead_sales.id'
            )
            ->where('lead_sales.id', $id)
            ->first();
        return view('dashboard.pre-check-form', compact('operation'));
    })->name('verification.pre-check-form')->middleware('auth');
    // Final PostPaid Step
    Route::resource('/activation', 'ActivationFormController')->middleware('auth');
    // Route::resource('/batches', 'BatchesController');
    // Route::resource('/subject', 'SubjectController');
    // Route::resource('/teacher', 'TeachersController');
    // Route::resource('/lectures', 'SubjectCategoryController');
    // Route::resource('/student', 'StudentController');
    // Route::resource('/meeting', 'MeetingRoomController');
    // Route::resource('/resource-type', 'ResourceTypeController');
    // Route::resource('/resources', 'ResourcesController');

    // Route::resource('/view_class', 'ClassesController');
    // Route::resource('/AddClass', 'ClassesController');
    // Route::resource('/AddClass', 'ClassesController');
    //
    // Route::resource('classes', 'ClassesController');
    //
    Route::get('active-number', function () {
        $data = numberdetail::select("numberdetails.*", "choosen_numbers.id as cid", "choosen_numbers.agent_group", "users.name", "choosen_numbers.created_at as datetime")
            ->Join(
                'choosen_numbers',
                'choosen_numbers.number_id',
                '=',
                'numberdetails.id'
            )
            ->Join(
                'users',
                'users.id',
                '=',
                'choosen_numbers.user_id'
            )
            ->where("choosen_numbers.status", 2)
            ->where('channel_type', 'TTF')
            // ->where("choosen_numbers.agent_group", auth()->user()->agent_code)
            // ->where("","")
            // ->where("remarks.user_agent_id", auth()->user()->id)
            // ->where("choosen_numbers.user_id", $request->simtype)
            // ->where("numberdetails.type", $request->simtype)
            // ->where("numberdetails.status", 'Available')
            // ->groupBy('numberdetails.type')
            ->get();
        return view('dashboard.view-active-number', compact('data'));
    })->name('active-number')->middleware('auth');
    Route::get('number-all', function () {

        // $data = numberdetail::all();
        $data = numberdetail::select("numberdetails.*", "users.name", "choosen_numbers.id as cid")
            ->LeftJoin(
                'choosen_numbers',
                'choosen_numbers.number_id',
                '=',
                'numberdetails.id'
            )
            ->LeftJoin(
                'users',
                'users.id',
                '=',
                'choosen_numbers.user_id'
            )
            ->where('channel_type', 'TTF')
            ->get();

        // ->get();
        return view('dashboard.view-all-number', compact('data'));
    })->name('number-all')->middleware('auth');

    Route::get('user-number-all', function () {
        $data = choosen_number::selectRaw('users.*, COUNT(choosen_numbers.user_id) as total_posts')
            // ->Join(
            //     'choosen_numbers',
            //     'choosen_numbers.number_id',
            //     '=',
            //     'numberdetails.id'
            // )
            ->Join(
                'users',
                'users.id',
                '=',
                'choosen_numbers.user_id'
            )
            ->where("choosen_numbers.status", 1)
            ->groupBy('choosen_numbers.user_id')
            ->get();
        // $data = numberdetail::all();
        // ->get();
        return view('dashboard.view-all-user-number', compact('data'));
    })->name('user-number-all')->middleware('auth');
    Route::get('/user-number/{id}', function ($id) {
        $data = numberdetail::select("numberdetails.*", "choosen_numbers.id as cid", "choosen_numbers.agent_group", "users.name", "choosen_numbers.created_at as datetime", "choosen_numbers.status as css")
            ->Join(
                'choosen_numbers',
                'choosen_numbers.number_id',
                '=',
                'numberdetails.id'
            )
            ->Join(
                'users',
                'users.id',
                '=',
                'choosen_numbers.user_id'
            )
            ->Join(
                'channel_partners',
                'channel_partners.name',
                '=',
                'numberdetails.channel_type'
            )
            ->whereIn('channel_type', ['TTF','ExpressDial'])
            ->whereIn("choosen_numbers.status", ['1', '2', '3', '4'])
            ->where("choosen_numbers.user_id", $id)
            ->whereMonth('choosen_numbers.created_at', Carbon::now()->month)
            ->whereYear('choosen_numbers.created_at', Carbon::now()->year)
            // ->where("channel_partners.status", 1)
            ->get();
        return view('dashboard.view-active-number', compact('data'));
    })->name('user-number')->middleware('auth');
    Route::resource('/number-zone', 'ChoosenNumberController')->middleware('auth');
});
Route::get('code/{code}', 'ShortenMagic@shortenLink')->name('shorten.link')->middleware('auth');


// Route::get('/', 'HomeController@index')->name('admin.dashboard')->middleware('CheckCountry');

Route::get('/home', 'HomeController@index')->name('home')->middleware('auth');
//

//
// Verification Validator
//
    Route::get('/verification-validator', 'ValidatorController@daily_validator')->name('daily.validator')->middleware('auth');
//
//Clear Cache facade value:
Route::get('/clear-cache', function () {
    $exitCode = Artisan::call('cache:clear');
    $exitCode = Artisan::call('config:cache');
    $exitCode = Artisan::call('optimize');

    return '<h1>Cache facade value cleared</h1>';
});

Route::group(['prefix' => 'uploader'], function () {
    Route::post('/import-upload-bank', 'UploadController@import_data_excel')->name('import.uploader.excel')->middleware('auth');
    Route::get('/NumberAssignerManager', 'NumberAssigner@NumberAssignerManager')->name('NumberAssignerManager')->middleware('auth');
    Route::get('/NumberAssignerUser', 'NumberAssigner@NumberAssignerUser')->name('NumberAssignerUser')->middleware('auth');
});
Route::post('/bulk-excel', 'NumberAssigner@import')->name('bulk.excel')->middleware('auth');
Route::get('my-call-log', 'NumberController@my_call_log')->name('my_call_log')->middleware('auth');
Route::group(['prefix' => 'trainer'], function () {
    Route::get('/material', 'HomeController@index_material')->name('training.material')->middleware('CheckAuth');
    Route::get('/whatsapp-training', 'HomeController@whatsapp_training')->name('whatsapp.training')->middleware('auth');
    Route::get('/trainee-entry', 'TrainerController@trainee_entry')->name('trainee-entry')->middleware('auth');
    Route::post('/material-code-request', 'HomeController@material_code_request')->name('request.code.material')->middleware('auth');
    Route::post('/material-code-accept', 'HomeController@material_code_accept')->name('material.code.accept')->middleware('auth');
    Route::post('/trainer-request', 'TrainerController@TrainerSubmit')->name('TrainerSubmit')->middleware('auth');
});
Route::get('AttendanceChecker/{cc}', 'AttendanceController@AttendanceChecker')->name('AttendanceChecker')->middleware('auth');
Route::get('/ScanWhatsApp', 'WhatsAppController@ScanWhatsApp')->name('ScanWhatsApp');
Route::get('/ScanWhatsApp2', 'WhatsAppController@ScanWhatsApp2')->name('ScanWhatsApp2');
Route::get('/ScanWhatsApp3', 'WhatsAppController@ScanWhatsApp3')->name('ScanWhatsApp3');
Route::get('/ScanWhatsApp4', 'WhatsAppController@ScanWhatsApp4')->name('ScanWhatsApp4');
Route::get('/TransferWhatsApp', 'WhatsAppController@TransferWhatsApp')->name('ScanWhatsApp');
Route::get('/TransferNumber', 'WhatsAppController@TransferNumber')->name('ScanWhatsApp')->middleware('auth');;
Route::get('/MNP-Dashboard', 'MNPDashboardController@admin_dashboard')->name('MNPDashboard')->middleware('auth');;
Route::get('/MNP-user-Dashboard', 'MNPDashboardController@user_dashboard')->name('UserDashboard')->middleware('auth');;
Route::get('/MNP-table-data/{status}', 'MNPDashboardController@dashboard_status')->name('mnp.status')->middleware('auth');;

Route::get('/MasterMNPDashboard', 'MNPDashboardController@MasterMNPDashboard')->name('MasterMNPDashboard')->middleware('auth');;
Route::post('/mnp-admin-load', 'MNPDashboardController@mnploadajax')->name('mnpload.ajax')->middleware('auth');;
Route::get('/agent-mnp-log', 'MNPDashboardController@agent_mnp_log')->name('agent_mnp_log')->middleware('auth');;

Route::get('/MNPCallCenterData/{cc}', 'MNPDashboardController@mnpcallcenterdata')->name('mnpcallcenterdata')->middleware('auth');;
Route::post('/loadmnpdatacc', 'MNPDashboardController@loadmnpdatacc')->name('loadmnpdatacc')->middleware('auth');;


Route::get('/dnc-checker-number', 'ImportExcelController@dnc_checker_number')->name('dnc_checker_number')->middleware('auth');
Route::post('/dnc-checker-number-new', 'ImportExcelController@dnc_checker_number_new')->name('dnc.checker.number.list')->middleware('auth');
Route::get('/ReadyToAssign', 'AjaxController@ReadyToAssign')->name('ReadyToAssign')->middleware('auth');
Route::get('/ReAssignNumber', 'WhatsAppController@ReAssignNumber')->name('ReAssignNumber')->middleware('auth');

Route::post('/loadusers', 'UserController@loadusers')->name('loadusers')->middleware('auth');
Route::post('/loadpendingusers', 'UserController@loadpendingusers')->name('loadpendingusers')->middleware('auth');

Route::prefix('dncr')->group(function () {
    Route::get('/add-new', 'AjaxController@AddDncr')->name('AddDncr')->middleware('auth');
    Route::post('/add-new-dncr-post', 'AjaxController@AddDncrPost')->name('AddDncrPost')->middleware('auth');
    Route::get('/view-dncr-request', 'AjaxController@ViewDncrRequest')->name('ViewDncrRequest')->middleware('auth');
    Route::get('/add-dncr-file/{id}', 'AjaxController@UploadDncrRequest')->name('add.dncr.file')->middleware('auth');
    Route::post('/upload-dncr-post', 'AjaxController@UploadDncrPostRequest')->name('UploadDncrPostRequest')->middleware('auth');
});
// //Reoptimized class loader:
// Route::get('/optimize', function() {
//     $exitCode = Artisan::call('optimize');
//     return '<h1>Reoptimized class loader</h1>';
// });

// //Route cache:
// Route::get('/route-cache', function() {
//     $exitCode = Artisan::call('route:cache');
//     return '<h1>Routes cached</h1>';
// });

// //Clear Route cache:
// Route::get('/route-clear', function() {
//     $exitCode = Artisan::call('route:clear');
//     return '<h1>Route cache cleared</h1>';
// });

// //Clear View cache:
// Route::get('/view-clear', function() {
//     $exitCode = Artisan::call('view:clear');
//     return '<h1>View cache cleared</h1>';
// });

// //Clear Config cache:
// Route::get('/config-cache', function() {
//     $exitCode = Artisan::call('config:cache');
//     return '<h1>Clear Config cleared</h1>';
// });
